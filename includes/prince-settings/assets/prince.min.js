/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/prince.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/css/prince-admin.scss":
/*!***********************************!*\
  !*** ./src/css/prince-admin.scss ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/css/prince-admin.scss?");

/***/ }),

/***/ "./src/images/Prince-Crown-Logo-White-50x44.png":
/*!******************************************************!*\
  !*** ./src/images/Prince-Crown-Logo-White-50x44.png ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"Prince-Crown-Logo-White-50x44.png\";\n\n//# sourceURL=webpack:///./src/images/Prince-Crown-Logo-White-50x44.png?");

/***/ }),

/***/ "./src/images/layout sync recursive \\.png$":
/*!***************************************!*\
  !*** ./src/images/layout sync \.png$ ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./dual-sidebar.png\": \"./src/images/layout/dual-sidebar.png\",\n\t\"./full-width.png\": \"./src/images/layout/full-width.png\",\n\t\"./grid.png\": \"./src/images/layout/grid.png\",\n\t\"./left-dual-sidebar.png\": \"./src/images/layout/left-dual-sidebar.png\",\n\t\"./left-sidebar.png\": \"./src/images/layout/left-sidebar.png\",\n\t\"./list.png\": \"./src/images/layout/list.png\",\n\t\"./right-dual-sidebar.png\": \"./src/images/layout/right-dual-sidebar.png\",\n\t\"./right-sidebar.png\": \"./src/images/layout/right-sidebar.png\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/images/layout sync recursive \\\\.png$\";\n\n//# sourceURL=webpack:///./src/images/layout_sync_\\.png$?");

/***/ }),

/***/ "./src/images/layout/dual-sidebar.png":
/*!********************************************!*\
  !*** ./src/images/layout/dual-sidebar.png ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"dual-sidebar.png\";\n\n//# sourceURL=webpack:///./src/images/layout/dual-sidebar.png?");

/***/ }),

/***/ "./src/images/layout/full-width.png":
/*!******************************************!*\
  !*** ./src/images/layout/full-width.png ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"full-width.png\";\n\n//# sourceURL=webpack:///./src/images/layout/full-width.png?");

/***/ }),

/***/ "./src/images/layout/grid.png":
/*!************************************!*\
  !*** ./src/images/layout/grid.png ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"grid.png\";\n\n//# sourceURL=webpack:///./src/images/layout/grid.png?");

/***/ }),

/***/ "./src/images/layout/left-dual-sidebar.png":
/*!*************************************************!*\
  !*** ./src/images/layout/left-dual-sidebar.png ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"left-dual-sidebar.png\";\n\n//# sourceURL=webpack:///./src/images/layout/left-dual-sidebar.png?");

/***/ }),

/***/ "./src/images/layout/left-sidebar.png":
/*!********************************************!*\
  !*** ./src/images/layout/left-sidebar.png ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"left-sidebar.png\";\n\n//# sourceURL=webpack:///./src/images/layout/left-sidebar.png?");

/***/ }),

/***/ "./src/images/layout/list.png":
/*!************************************!*\
  !*** ./src/images/layout/list.png ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"list.png\";\n\n//# sourceURL=webpack:///./src/images/layout/list.png?");

/***/ }),

/***/ "./src/images/layout/right-dual-sidebar.png":
/*!**************************************************!*\
  !*** ./src/images/layout/right-dual-sidebar.png ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"right-dual-sidebar.png\";\n\n//# sourceURL=webpack:///./src/images/layout/right-dual-sidebar.png?");

/***/ }),

/***/ "./src/images/layout/right-sidebar.png":
/*!*********************************************!*\
  !*** ./src/images/layout/right-sidebar.png ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"right-sidebar.png\";\n\n//# sourceURL=webpack:///./src/images/layout/right-sidebar.png?");

/***/ }),

/***/ "./src/js/extra.js":
/*!*************************!*\
  !*** ./src/js/extra.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function ($) {\n  var prince = {\n    init: () => {\n      prince.handleActiveTab();\n      $('.ui-tabs>ul>li').click(prince.setActiveTab);\n    },\n\n    /* set active tab on click */\n    setActiveTab: function () {\n      $('.ui-state-default').removeClass('ui-tabs-active ui-state-active');\n      $('#page-prince_settings #post-body-content>div').hide();\n      $(this).addClass('ui-tabs-active ui-state-active');\n      const $aria_controls = $('#' + $(this).attr('aria-controls'));\n      $aria_controls.show();\n      $aria_controls.find('.prince-settings-nav>li:first-child').addClass('ui-tabs-active ui-state-active');\n      const $tab_id = $(this).attr('id');\n\n      if (typeof Storage !== 'undefined') {\n        localStorage.setItem('prince_settings_active_tab', $tab_id);\n      }\n    },\n\n    /* handle active tab after load */\n    handleActiveTab: () => {\n      $('.ui-state-default').removeClass('ui-tabs-active ui-state-active');\n      $('#page-prince_settings #post-body-content>div').hide();\n      let $tab_id = localStorage.getItem('prince_settings_active_tab');\n      $tab_id = $tab_id ? $tab_id : $('.ui-tabs>ul>li:first-child').attr('id');\n      const $tab = $('#' + $tab_id);\n\n      if ($tab) {\n        $tab.addClass('ui-tabs-active ui-state-active');\n        $('#' + $tab.attr('aria-controls')).show();\n      }\n\n      $('#page-prince_settings #post-body-content').show();\n    }\n  };\n  $(document).ready(prince.init);\n  return prince;\n})(jQuery);\n\n//# sourceURL=webpack:///./src/js/extra.js?");

/***/ }),

/***/ "./src/js/jquery-ui-timepicker.js":
/*!****************************************!*\
  !*** ./src/js/jquery-ui-timepicker.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*! jQuery Timepicker Addon - v1.4.3 - 2013-11-30\r\n* http://trentrichardson.com/examples/timepicker\r\n* Copyright (c) 2013 Trent Richardson; Licensed MIT */\n(function ($) {\n  if ($.ui.timepicker = $.ui.timepicker || {}, !$.ui.timepicker.version) {\n    $.extend($.ui, {\n      timepicker: {\n        version: \"1.4.3\"\n      }\n    });\n\n    var Timepicker = function () {\n      this.regional = [], this.regional[\"\"] = {\n        currentText: \"Now\",\n        closeText: \"Done\",\n        amNames: [\"AM\", \"A\"],\n        pmNames: [\"PM\", \"P\"],\n        timeFormat: \"HH:mm\",\n        timeSuffix: \"\",\n        timeOnlyTitle: \"Choose Time\",\n        timeText: \"Time\",\n        hourText: \"Hour\",\n        minuteText: \"Minute\",\n        secondText: \"Second\",\n        millisecText: \"Millisecond\",\n        microsecText: \"Microsecond\",\n        timezoneText: \"Time Zone\",\n        isRTL: !1\n      }, this._defaults = {\n        showButtonPanel: !0,\n        timeOnly: !1,\n        showHour: null,\n        showMinute: null,\n        showSecond: null,\n        showMillisec: null,\n        showMicrosec: null,\n        showTimezone: null,\n        showTime: !0,\n        stepHour: 1,\n        stepMinute: 1,\n        stepSecond: 1,\n        stepMillisec: 1,\n        stepMicrosec: 1,\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisec: 0,\n        microsec: 0,\n        timezone: null,\n        hourMin: 0,\n        minuteMin: 0,\n        secondMin: 0,\n        millisecMin: 0,\n        microsecMin: 0,\n        hourMax: 23,\n        minuteMax: 59,\n        secondMax: 59,\n        millisecMax: 999,\n        microsecMax: 999,\n        minDateTime: null,\n        maxDateTime: null,\n        onSelect: null,\n        hourGrid: 0,\n        minuteGrid: 0,\n        secondGrid: 0,\n        millisecGrid: 0,\n        microsecGrid: 0,\n        alwaysSetTime: !0,\n        separator: \" \",\n        altFieldTimeOnly: !0,\n        altTimeFormat: null,\n        altSeparator: null,\n        altTimeSuffix: null,\n        pickerTimeFormat: null,\n        pickerTimeSuffix: null,\n        showTimepicker: !0,\n        timezoneList: null,\n        addSliderAccess: !1,\n        sliderAccessArgs: null,\n        controlType: \"slider\",\n        defaultValue: null,\n        parse: \"strict\"\n      }, $.extend(this._defaults, this.regional[\"\"]);\n    };\n\n    $.extend(Timepicker.prototype, {\n      $input: null,\n      $altInput: null,\n      $timeObj: null,\n      inst: null,\n      hour_slider: null,\n      minute_slider: null,\n      second_slider: null,\n      millisec_slider: null,\n      microsec_slider: null,\n      timezone_select: null,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisec: 0,\n      microsec: 0,\n      timezone: null,\n      hourMinOriginal: null,\n      minuteMinOriginal: null,\n      secondMinOriginal: null,\n      millisecMinOriginal: null,\n      microsecMinOriginal: null,\n      hourMaxOriginal: null,\n      minuteMaxOriginal: null,\n      secondMaxOriginal: null,\n      millisecMaxOriginal: null,\n      microsecMaxOriginal: null,\n      ampm: \"\",\n      formattedDate: \"\",\n      formattedTime: \"\",\n      formattedDateTime: \"\",\n      timezoneList: null,\n      units: [\"hour\", \"minute\", \"second\", \"millisec\", \"microsec\"],\n      support: {},\n      control: null,\n      setDefaults: function (e) {\n        return extendRemove(this._defaults, e || {}), this;\n      },\n      _newInst: function ($input, opts) {\n        var tp_inst = new Timepicker(),\n            inlineSettings = {},\n            fns = {},\n            overrides,\n            i;\n\n        for (var attrName in this._defaults) if (this._defaults.hasOwnProperty(attrName)) {\n          var attrValue = $input.attr(\"time:\" + attrName);\n          if (attrValue) try {\n            inlineSettings[attrName] = eval(attrValue);\n          } catch (err) {\n            inlineSettings[attrName] = attrValue;\n          }\n        }\n\n        overrides = {\n          beforeShow: function (e, t) {\n            return $.isFunction(tp_inst._defaults.evnts.beforeShow) ? tp_inst._defaults.evnts.beforeShow.call($input[0], e, t, tp_inst) : void 0;\n          },\n          onChangeMonthYear: function (e, t, i) {\n            tp_inst._updateDateTime(i), $.isFunction(tp_inst._defaults.evnts.onChangeMonthYear) && tp_inst._defaults.evnts.onChangeMonthYear.call($input[0], e, t, i, tp_inst);\n          },\n          onClose: function (e, t) {\n            tp_inst.timeDefined === !0 && \"\" !== $input.val() && tp_inst._updateDateTime(t), $.isFunction(tp_inst._defaults.evnts.onClose) && tp_inst._defaults.evnts.onClose.call($input[0], e, t, tp_inst);\n          }\n        };\n\n        for (i in overrides) overrides.hasOwnProperty(i) && (fns[i] = opts[i] || null);\n\n        tp_inst._defaults = $.extend({}, this._defaults, inlineSettings, opts, overrides, {\n          evnts: fns,\n          timepicker: tp_inst\n        }), tp_inst.amNames = $.map(tp_inst._defaults.amNames, function (e) {\n          return e.toUpperCase();\n        }), tp_inst.pmNames = $.map(tp_inst._defaults.pmNames, function (e) {\n          return e.toUpperCase();\n        }), tp_inst.support = detectSupport(tp_inst._defaults.timeFormat + (tp_inst._defaults.pickerTimeFormat ? tp_inst._defaults.pickerTimeFormat : \"\") + (tp_inst._defaults.altTimeFormat ? tp_inst._defaults.altTimeFormat : \"\")), \"string\" == typeof tp_inst._defaults.controlType ? (\"slider\" === tp_inst._defaults.controlType && $.ui.slider === void 0 && (tp_inst._defaults.controlType = \"select\"), tp_inst.control = tp_inst._controls[tp_inst._defaults.controlType]) : tp_inst.control = tp_inst._defaults.controlType;\n        var timezoneList = [-720, -660, -600, -570, -540, -480, -420, -360, -300, -270, -240, -210, -180, -120, -60, 0, 60, 120, 180, 210, 240, 270, 300, 330, 345, 360, 390, 420, 480, 525, 540, 570, 600, 630, 660, 690, 720, 765, 780, 840];\n        null !== tp_inst._defaults.timezoneList && (timezoneList = tp_inst._defaults.timezoneList);\n        var tzl = timezoneList.length,\n            tzi = 0,\n            tzv = null;\n        if (tzl > 0 && \"object\" != typeof timezoneList[0]) for (; tzl > tzi; tzi++) tzv = timezoneList[tzi], timezoneList[tzi] = {\n          value: tzv,\n          label: $.timepicker.timezoneOffsetString(tzv, tp_inst.support.iso8601)\n        };\n        return tp_inst._defaults.timezoneList = timezoneList, tp_inst.timezone = null !== tp_inst._defaults.timezone ? $.timepicker.timezoneOffsetNumber(tp_inst._defaults.timezone) : -1 * new Date().getTimezoneOffset(), tp_inst.hour = tp_inst._defaults.hour < tp_inst._defaults.hourMin ? tp_inst._defaults.hourMin : tp_inst._defaults.hour > tp_inst._defaults.hourMax ? tp_inst._defaults.hourMax : tp_inst._defaults.hour, tp_inst.minute = tp_inst._defaults.minute < tp_inst._defaults.minuteMin ? tp_inst._defaults.minuteMin : tp_inst._defaults.minute > tp_inst._defaults.minuteMax ? tp_inst._defaults.minuteMax : tp_inst._defaults.minute, tp_inst.second = tp_inst._defaults.second < tp_inst._defaults.secondMin ? tp_inst._defaults.secondMin : tp_inst._defaults.second > tp_inst._defaults.secondMax ? tp_inst._defaults.secondMax : tp_inst._defaults.second, tp_inst.millisec = tp_inst._defaults.millisec < tp_inst._defaults.millisecMin ? tp_inst._defaults.millisecMin : tp_inst._defaults.millisec > tp_inst._defaults.millisecMax ? tp_inst._defaults.millisecMax : tp_inst._defaults.millisec, tp_inst.microsec = tp_inst._defaults.microsec < tp_inst._defaults.microsecMin ? tp_inst._defaults.microsecMin : tp_inst._defaults.microsec > tp_inst._defaults.microsecMax ? tp_inst._defaults.microsecMax : tp_inst._defaults.microsec, tp_inst.ampm = \"\", tp_inst.$input = $input, tp_inst._defaults.altField && (tp_inst.$altInput = $(tp_inst._defaults.altField).css({\n          cursor: \"pointer\"\n        }).focus(function () {\n          $input.trigger(\"focus\");\n        })), (0 === tp_inst._defaults.minDate || 0 === tp_inst._defaults.minDateTime) && (tp_inst._defaults.minDate = new Date()), (0 === tp_inst._defaults.maxDate || 0 === tp_inst._defaults.maxDateTime) && (tp_inst._defaults.maxDate = new Date()), void 0 !== tp_inst._defaults.minDate && tp_inst._defaults.minDate instanceof Date && (tp_inst._defaults.minDateTime = new Date(tp_inst._defaults.minDate.getTime())), void 0 !== tp_inst._defaults.minDateTime && tp_inst._defaults.minDateTime instanceof Date && (tp_inst._defaults.minDate = new Date(tp_inst._defaults.minDateTime.getTime())), void 0 !== tp_inst._defaults.maxDate && tp_inst._defaults.maxDate instanceof Date && (tp_inst._defaults.maxDateTime = new Date(tp_inst._defaults.maxDate.getTime())), void 0 !== tp_inst._defaults.maxDateTime && tp_inst._defaults.maxDateTime instanceof Date && (tp_inst._defaults.maxDate = new Date(tp_inst._defaults.maxDateTime.getTime())), tp_inst.$input.bind(\"focus\", function () {\n          tp_inst._onFocus();\n        }), tp_inst;\n      },\n      _addTimePicker: function (e) {\n        var t = this.$altInput && this._defaults.altFieldTimeOnly ? this.$input.val() + \" \" + this.$altInput.val() : this.$input.val();\n        this.timeDefined = this._parseTime(t), this._limitMinMaxDateTime(e, !1), this._injectTimePicker();\n      },\n      _parseTime: function (e, t) {\n        if (this.inst || (this.inst = $.datepicker._getInst(this.$input[0])), t || !this._defaults.timeOnly) {\n          var i = $.datepicker._get(this.inst, \"dateFormat\");\n\n          try {\n            var s = parseDateTimeInternal(i, this._defaults.timeFormat, e, $.datepicker._getFormatConfig(this.inst), this._defaults);\n            if (!s.timeObj) return !1;\n            $.extend(this, s.timeObj);\n          } catch (a) {\n            return $.timepicker.log(\"Error parsing the date/time string: \" + a + \"\\ndate/time string = \" + e + \"\\ntimeFormat = \" + this._defaults.timeFormat + \"\\ndateFormat = \" + i), !1;\n          }\n\n          return !0;\n        }\n\n        var n = $.datepicker.parseTime(this._defaults.timeFormat, e, this._defaults);\n        return n ? ($.extend(this, n), !0) : !1;\n      },\n      _injectTimePicker: function () {\n        var e = this.inst.dpDiv,\n            t = this.inst.settings,\n            i = this,\n            s = \"\",\n            a = \"\",\n            n = null,\n            r = {},\n            l = {},\n            o = null,\n            c = 0,\n            u = 0;\n\n        if (0 === e.find(\"div.ui-timepicker-div\").length && t.showTimepicker) {\n          var m = ' style=\"display:none;\"',\n              d = '<div class=\"ui-timepicker-div' + (t.isRTL ? \" ui-timepicker-rtl\" : \"\") + '\"><dl>' + '<dt class=\"ui_tpicker_time_label\"' + (t.showTime ? \"\" : m) + \">\" + t.timeText + \"</dt>\" + '<dd class=\"ui_tpicker_time\"' + (t.showTime ? \"\" : m) + \"></dd>\";\n\n          for (c = 0, u = this.units.length; u > c; c++) {\n            if (s = this.units[c], a = s.substr(0, 1).toUpperCase() + s.substr(1), n = null !== t[\"show\" + a] ? t[\"show\" + a] : this.support[s], r[s] = parseInt(t[s + \"Max\"] - (t[s + \"Max\"] - t[s + \"Min\"]) % t[\"step\" + a], 10), l[s] = 0, d += '<dt class=\"ui_tpicker_' + s + '_label\"' + (n ? \"\" : m) + \">\" + t[s + \"Text\"] + \"</dt>\" + '<dd class=\"ui_tpicker_' + s + '\"><div class=\"ui_tpicker_' + s + '_slider\"' + (n ? \"\" : m) + \"></div>\", n && t[s + \"Grid\"] > 0) {\n              if (d += '<div style=\"padding-left: 1px\"><table class=\"ui-tpicker-grid-label\"><tr>', \"hour\" === s) for (var p = t[s + \"Min\"]; r[s] >= p; p += parseInt(t[s + \"Grid\"], 10)) {\n                l[s]++;\n                var h = $.datepicker.formatTime(this.support.ampm ? \"hht\" : \"HH\", {\n                  hour: p\n                }, t);\n                d += '<td data-for=\"' + s + '\">' + h + \"</td>\";\n              } else for (var _ = t[s + \"Min\"]; r[s] >= _; _ += parseInt(t[s + \"Grid\"], 10)) l[s]++, d += '<td data-for=\"' + s + '\">' + (10 > _ ? \"0\" : \"\") + _ + \"</td>\";\n              d += \"</tr></table></div>\";\n            }\n\n            d += \"</dd>\";\n          }\n\n          var f = null !== t.showTimezone ? t.showTimezone : this.support.timezone;\n          d += '<dt class=\"ui_tpicker_timezone_label\"' + (f ? \"\" : m) + \">\" + t.timezoneText + \"</dt>\", d += '<dd class=\"ui_tpicker_timezone\" ' + (f ? \"\" : m) + \"></dd>\", d += \"</dl></div>\";\n          var g = $(d);\n\n          for (t.timeOnly === !0 && (g.prepend('<div class=\"ui-widget-header ui-helper-clearfix ui-corner-all\"><div class=\"ui-datepicker-title\">' + t.timeOnlyTitle + \"</div>\" + \"</div>\"), e.find(\".ui-datepicker-header, .ui-datepicker-calendar\").hide()), c = 0, u = i.units.length; u > c; c++) s = i.units[c], a = s.substr(0, 1).toUpperCase() + s.substr(1), n = null !== t[\"show\" + a] ? t[\"show\" + a] : this.support[s], i[s + \"_slider\"] = i.control.create(i, g.find(\".ui_tpicker_\" + s + \"_slider\"), s, i[s], t[s + \"Min\"], r[s], t[\"step\" + a]), n && t[s + \"Grid\"] > 0 && (o = 100 * l[s] * t[s + \"Grid\"] / (r[s] - t[s + \"Min\"]), g.find(\".ui_tpicker_\" + s + \" table\").css({\n            width: o + \"%\",\n            marginLeft: t.isRTL ? \"0\" : o / (-2 * l[s]) + \"%\",\n            marginRight: t.isRTL ? o / (-2 * l[s]) + \"%\" : \"0\",\n            borderCollapse: \"collapse\"\n          }).find(\"td\").click(function () {\n            var e = $(this),\n                t = e.html(),\n                a = parseInt(t.replace(/[^0-9]/g), 10),\n                n = t.replace(/[^apm]/gi),\n                r = e.data(\"for\");\n            \"hour\" === r && (-1 !== n.indexOf(\"p\") && 12 > a ? a += 12 : -1 !== n.indexOf(\"a\") && 12 === a && (a = 0)), i.control.value(i, i[r + \"_slider\"], s, a), i._onTimeChange(), i._onSelectHandler();\n          }).css({\n            cursor: \"pointer\",\n            width: 100 / l[s] + \"%\",\n            textAlign: \"center\",\n            overflow: \"hidden\"\n          }));\n\n          if (this.timezone_select = g.find(\".ui_tpicker_timezone\").append(\"<select></select>\").find(\"select\"), $.fn.append.apply(this.timezone_select, $.map(t.timezoneList, function (e) {\n            return $(\"<option />\").val(\"object\" == typeof e ? e.value : e).text(\"object\" == typeof e ? e.label : e);\n          })), this.timezone !== void 0 && null !== this.timezone && \"\" !== this.timezone) {\n            var M = -1 * new Date(this.inst.selectedYear, this.inst.selectedMonth, this.inst.selectedDay, 12).getTimezoneOffset();\n            M === this.timezone ? selectLocalTimezone(i) : this.timezone_select.val(this.timezone);\n          } else this.hour !== void 0 && null !== this.hour && \"\" !== this.hour ? this.timezone_select.val(t.timezone) : selectLocalTimezone(i);\n\n          this.timezone_select.change(function () {\n            i._onTimeChange(), i._onSelectHandler();\n          });\n          var v = e.find(\".ui-datepicker-buttonpane\");\n\n          if (v.length ? v.before(g) : e.append(g), this.$timeObj = g.find(\".ui_tpicker_time\"), null !== this.inst) {\n            var k = this.timeDefined;\n            this._onTimeChange(), this.timeDefined = k;\n          }\n\n          if (this._defaults.addSliderAccess) {\n            var T = this._defaults.sliderAccessArgs,\n                D = this._defaults.isRTL;\n            T.isRTL = D, setTimeout(function () {\n              if (0 === g.find(\".ui-slider-access\").length) {\n                g.find(\".ui-slider:visible\").sliderAccess(T);\n                var e = g.find(\".ui-slider-access:eq(0)\").outerWidth(!0);\n                e && g.find(\"table:visible\").each(function () {\n                  var t = $(this),\n                      i = t.outerWidth(),\n                      s = (\"\" + t.css(D ? \"marginRight\" : \"marginLeft\")).replace(\"%\", \"\"),\n                      a = i - e,\n                      n = s * a / i + \"%\",\n                      r = {\n                    width: a,\n                    marginRight: 0,\n                    marginLeft: 0\n                  };\n                  r[D ? \"marginRight\" : \"marginLeft\"] = n, t.css(r);\n                });\n              }\n            }, 10);\n          }\n\n          i._limitMinMaxDateTime(this.inst, !0);\n        }\n      },\n      _limitMinMaxDateTime: function (e, t) {\n        var i = this._defaults,\n            s = new Date(e.selectedYear, e.selectedMonth, e.selectedDay);\n\n        if (this._defaults.showTimepicker) {\n          if (null !== $.datepicker._get(e, \"minDateTime\") && void 0 !== $.datepicker._get(e, \"minDateTime\") && s) {\n            var a = $.datepicker._get(e, \"minDateTime\"),\n                n = new Date(a.getFullYear(), a.getMonth(), a.getDate(), 0, 0, 0, 0);\n\n            (null === this.hourMinOriginal || null === this.minuteMinOriginal || null === this.secondMinOriginal || null === this.millisecMinOriginal || null === this.microsecMinOriginal) && (this.hourMinOriginal = i.hourMin, this.minuteMinOriginal = i.minuteMin, this.secondMinOriginal = i.secondMin, this.millisecMinOriginal = i.millisecMin, this.microsecMinOriginal = i.microsecMin), e.settings.timeOnly || n.getTime() === s.getTime() ? (this._defaults.hourMin = a.getHours(), this.hour <= this._defaults.hourMin ? (this.hour = this._defaults.hourMin, this._defaults.minuteMin = a.getMinutes(), this.minute <= this._defaults.minuteMin ? (this.minute = this._defaults.minuteMin, this._defaults.secondMin = a.getSeconds(), this.second <= this._defaults.secondMin ? (this.second = this._defaults.secondMin, this._defaults.millisecMin = a.getMilliseconds(), this.millisec <= this._defaults.millisecMin ? (this.millisec = this._defaults.millisecMin, this._defaults.microsecMin = a.getMicroseconds()) : (this.microsec < this._defaults.microsecMin && (this.microsec = this._defaults.microsecMin), this._defaults.microsecMin = this.microsecMinOriginal)) : (this._defaults.millisecMin = this.millisecMinOriginal, this._defaults.microsecMin = this.microsecMinOriginal)) : (this._defaults.secondMin = this.secondMinOriginal, this._defaults.millisecMin = this.millisecMinOriginal, this._defaults.microsecMin = this.microsecMinOriginal)) : (this._defaults.minuteMin = this.minuteMinOriginal, this._defaults.secondMin = this.secondMinOriginal, this._defaults.millisecMin = this.millisecMinOriginal, this._defaults.microsecMin = this.microsecMinOriginal)) : (this._defaults.hourMin = this.hourMinOriginal, this._defaults.minuteMin = this.minuteMinOriginal, this._defaults.secondMin = this.secondMinOriginal, this._defaults.millisecMin = this.millisecMinOriginal, this._defaults.microsecMin = this.microsecMinOriginal);\n          }\n\n          if (null !== $.datepicker._get(e, \"maxDateTime\") && void 0 !== $.datepicker._get(e, \"maxDateTime\") && s) {\n            var r = $.datepicker._get(e, \"maxDateTime\"),\n                l = new Date(r.getFullYear(), r.getMonth(), r.getDate(), 0, 0, 0, 0);\n\n            (null === this.hourMaxOriginal || null === this.minuteMaxOriginal || null === this.secondMaxOriginal || null === this.millisecMaxOriginal) && (this.hourMaxOriginal = i.hourMax, this.minuteMaxOriginal = i.minuteMax, this.secondMaxOriginal = i.secondMax, this.millisecMaxOriginal = i.millisecMax, this.microsecMaxOriginal = i.microsecMax), e.settings.timeOnly || l.getTime() === s.getTime() ? (this._defaults.hourMax = r.getHours(), this.hour >= this._defaults.hourMax ? (this.hour = this._defaults.hourMax, this._defaults.minuteMax = r.getMinutes(), this.minute >= this._defaults.minuteMax ? (this.minute = this._defaults.minuteMax, this._defaults.secondMax = r.getSeconds(), this.second >= this._defaults.secondMax ? (this.second = this._defaults.secondMax, this._defaults.millisecMax = r.getMilliseconds(), this.millisec >= this._defaults.millisecMax ? (this.millisec = this._defaults.millisecMax, this._defaults.microsecMax = r.getMicroseconds()) : (this.microsec > this._defaults.microsecMax && (this.microsec = this._defaults.microsecMax), this._defaults.microsecMax = this.microsecMaxOriginal)) : (this._defaults.millisecMax = this.millisecMaxOriginal, this._defaults.microsecMax = this.microsecMaxOriginal)) : (this._defaults.secondMax = this.secondMaxOriginal, this._defaults.millisecMax = this.millisecMaxOriginal, this._defaults.microsecMax = this.microsecMaxOriginal)) : (this._defaults.minuteMax = this.minuteMaxOriginal, this._defaults.secondMax = this.secondMaxOriginal, this._defaults.millisecMax = this.millisecMaxOriginal, this._defaults.microsecMax = this.microsecMaxOriginal)) : (this._defaults.hourMax = this.hourMaxOriginal, this._defaults.minuteMax = this.minuteMaxOriginal, this._defaults.secondMax = this.secondMaxOriginal, this._defaults.millisecMax = this.millisecMaxOriginal, this._defaults.microsecMax = this.microsecMaxOriginal);\n          }\n\n          if (void 0 !== t && t === !0) {\n            var o = parseInt(this._defaults.hourMax - (this._defaults.hourMax - this._defaults.hourMin) % this._defaults.stepHour, 10),\n                c = parseInt(this._defaults.minuteMax - (this._defaults.minuteMax - this._defaults.minuteMin) % this._defaults.stepMinute, 10),\n                u = parseInt(this._defaults.secondMax - (this._defaults.secondMax - this._defaults.secondMin) % this._defaults.stepSecond, 10),\n                m = parseInt(this._defaults.millisecMax - (this._defaults.millisecMax - this._defaults.millisecMin) % this._defaults.stepMillisec, 10),\n                d = parseInt(this._defaults.microsecMax - (this._defaults.microsecMax - this._defaults.microsecMin) % this._defaults.stepMicrosec, 10);\n            this.hour_slider && (this.control.options(this, this.hour_slider, \"hour\", {\n              min: this._defaults.hourMin,\n              max: o\n            }), this.control.value(this, this.hour_slider, \"hour\", this.hour - this.hour % this._defaults.stepHour)), this.minute_slider && (this.control.options(this, this.minute_slider, \"minute\", {\n              min: this._defaults.minuteMin,\n              max: c\n            }), this.control.value(this, this.minute_slider, \"minute\", this.minute - this.minute % this._defaults.stepMinute)), this.second_slider && (this.control.options(this, this.second_slider, \"second\", {\n              min: this._defaults.secondMin,\n              max: u\n            }), this.control.value(this, this.second_slider, \"second\", this.second - this.second % this._defaults.stepSecond)), this.millisec_slider && (this.control.options(this, this.millisec_slider, \"millisec\", {\n              min: this._defaults.millisecMin,\n              max: m\n            }), this.control.value(this, this.millisec_slider, \"millisec\", this.millisec - this.millisec % this._defaults.stepMillisec)), this.microsec_slider && (this.control.options(this, this.microsec_slider, \"microsec\", {\n              min: this._defaults.microsecMin,\n              max: d\n            }), this.control.value(this, this.microsec_slider, \"microsec\", this.microsec - this.microsec % this._defaults.stepMicrosec));\n          }\n        }\n      },\n      _onTimeChange: function () {\n        if (this._defaults.showTimepicker) {\n          var e = this.hour_slider ? this.control.value(this, this.hour_slider, \"hour\") : !1,\n              t = this.minute_slider ? this.control.value(this, this.minute_slider, \"minute\") : !1,\n              i = this.second_slider ? this.control.value(this, this.second_slider, \"second\") : !1,\n              s = this.millisec_slider ? this.control.value(this, this.millisec_slider, \"millisec\") : !1,\n              a = this.microsec_slider ? this.control.value(this, this.microsec_slider, \"microsec\") : !1,\n              n = this.timezone_select ? this.timezone_select.val() : !1,\n              r = this._defaults,\n              l = r.pickerTimeFormat || r.timeFormat,\n              o = r.pickerTimeSuffix || r.timeSuffix;\n          \"object\" == typeof e && (e = !1), \"object\" == typeof t && (t = !1), \"object\" == typeof i && (i = !1), \"object\" == typeof s && (s = !1), \"object\" == typeof a && (a = !1), \"object\" == typeof n && (n = !1), e !== !1 && (e = parseInt(e, 10)), t !== !1 && (t = parseInt(t, 10)), i !== !1 && (i = parseInt(i, 10)), s !== !1 && (s = parseInt(s, 10)), a !== !1 && (a = parseInt(a, 10)), n !== !1 && (n = \"\" + n);\n          var c = r[12 > e ? \"amNames\" : \"pmNames\"][0],\n              u = e !== parseInt(this.hour, 10) || t !== parseInt(this.minute, 10) || i !== parseInt(this.second, 10) || s !== parseInt(this.millisec, 10) || a !== parseInt(this.microsec, 10) || this.ampm.length > 0 && 12 > e != (-1 !== $.inArray(this.ampm.toUpperCase(), this.amNames)) || null !== this.timezone && n !== \"\" + this.timezone;\n          u && (e !== !1 && (this.hour = e), t !== !1 && (this.minute = t), i !== !1 && (this.second = i), s !== !1 && (this.millisec = s), a !== !1 && (this.microsec = a), n !== !1 && (this.timezone = n), this.inst || (this.inst = $.datepicker._getInst(this.$input[0])), this._limitMinMaxDateTime(this.inst, !0)), this.support.ampm && (this.ampm = c), this.formattedTime = $.datepicker.formatTime(r.timeFormat, this, r), this.$timeObj && (l === r.timeFormat ? this.$timeObj.text(this.formattedTime + o) : this.$timeObj.text($.datepicker.formatTime(l, this, r) + o)), this.timeDefined = !0, u && (this._updateDateTime(), this.$input.focus());\n        }\n      },\n      _onSelectHandler: function () {\n        var e = this._defaults.onSelect || this.inst.settings.onSelect,\n            t = this.$input ? this.$input[0] : null;\n        e && t && e.apply(t, [this.formattedDateTime, this]);\n      },\n      _updateDateTime: function (e) {\n        e = this.inst || e;\n\n        var t = e.currentYear > 0 ? new Date(e.currentYear, e.currentMonth, e.currentDay) : new Date(e.selectedYear, e.selectedMonth, e.selectedDay),\n            i = $.datepicker._daylightSavingAdjust(t),\n            s = $.datepicker._get(e, \"dateFormat\"),\n            a = $.datepicker._getFormatConfig(e),\n            n = null !== i && this.timeDefined;\n\n        this.formattedDate = $.datepicker.formatDate(s, null === i ? new Date() : i, a);\n        var r = this.formattedDate;\n        if (\"\" === e.lastVal && (e.currentYear = e.selectedYear, e.currentMonth = e.selectedMonth, e.currentDay = e.selectedDay), this._defaults.timeOnly === !0 ? r = this.formattedTime : this._defaults.timeOnly !== !0 && (this._defaults.alwaysSetTime || n) && (r += this._defaults.separator + this.formattedTime + this._defaults.timeSuffix), this.formattedDateTime = r, this._defaults.showTimepicker) {\n          if (this.$altInput && this._defaults.timeOnly === !1 && this._defaults.altFieldTimeOnly === !0) this.$altInput.val(this.formattedTime), this.$input.val(this.formattedDate);else if (this.$altInput) {\n            this.$input.val(r);\n            var l = \"\",\n                o = this._defaults.altSeparator ? this._defaults.altSeparator : this._defaults.separator,\n                c = this._defaults.altTimeSuffix ? this._defaults.altTimeSuffix : this._defaults.timeSuffix;\n            this._defaults.timeOnly || (l = this._defaults.altFormat ? $.datepicker.formatDate(this._defaults.altFormat, null === i ? new Date() : i, a) : this.formattedDate, l && (l += o)), l += this._defaults.altTimeFormat ? $.datepicker.formatTime(this._defaults.altTimeFormat, this, this._defaults) + c : this.formattedTime + c, this.$altInput.val(l);\n          } else this.$input.val(r);\n        } else this.$input.val(this.formattedDate);\n        this.$input.trigger(\"change\");\n      },\n      _onFocus: function () {\n        if (!this.$input.val() && this._defaults.defaultValue) {\n          this.$input.val(this._defaults.defaultValue);\n\n          var e = $.datepicker._getInst(this.$input.get(0)),\n              t = $.datepicker._get(e, \"timepicker\");\n\n          if (t && t._defaults.timeOnly && e.input.val() !== e.lastVal) try {\n            $.datepicker._updateDatepicker(e);\n          } catch (i) {\n            $.timepicker.log(i);\n          }\n        }\n      },\n      _controls: {\n        slider: {\n          create: function (e, t, i, s, a, n, r) {\n            var l = e._defaults.isRTL;\n            return t.prop(\"slide\", null).slider({\n              orientation: \"horizontal\",\n              value: l ? -1 * s : s,\n              min: l ? -1 * n : a,\n              max: l ? -1 * a : n,\n              step: r,\n              slide: function (t, s) {\n                e.control.value(e, $(this), i, l ? -1 * s.value : s.value), e._onTimeChange();\n              },\n              stop: function () {\n                e._onSelectHandler();\n              }\n            });\n          },\n          options: function (e, t, i, s, a) {\n            if (e._defaults.isRTL) {\n              if (\"string\" == typeof s) return \"min\" === s || \"max\" === s ? void 0 !== a ? t.slider(s, -1 * a) : Math.abs(t.slider(s)) : t.slider(s);\n              var n = s.min,\n                  r = s.max;\n              return s.min = s.max = null, void 0 !== n && (s.max = -1 * n), void 0 !== r && (s.min = -1 * r), t.slider(s);\n            }\n\n            return \"string\" == typeof s && void 0 !== a ? t.slider(s, a) : t.slider(s);\n          },\n          value: function (e, t, i, s) {\n            return e._defaults.isRTL ? void 0 !== s ? t.slider(\"value\", -1 * s) : Math.abs(t.slider(\"value\")) : void 0 !== s ? t.slider(\"value\", s) : t.slider(\"value\");\n          }\n        },\n        select: {\n          create: function (e, t, i, s, a, n, r) {\n            for (var l = '<select class=\"ui-timepicker-select\" data-unit=\"' + i + '\" data-min=\"' + a + '\" data-max=\"' + n + '\" data-step=\"' + r + '\">', o = e._defaults.pickerTimeFormat || e._defaults.timeFormat, c = a; n >= c; c += r) l += '<option value=\"' + c + '\"' + (c === s ? \" selected\" : \"\") + \">\", l += \"hour\" === i ? $.datepicker.formatTime($.trim(o.replace(/[^ht ]/gi, \"\")), {\n              hour: c\n            }, e._defaults) : \"millisec\" === i || \"microsec\" === i || c >= 10 ? c : \"0\" + (\"\" + c), l += \"</option>\";\n\n            return l += \"</select>\", t.children(\"select\").remove(), $(l).appendTo(t).change(function () {\n              e._onTimeChange(), e._onSelectHandler();\n            }), t;\n          },\n          options: function (e, t, i, s, a) {\n            var n = {},\n                r = t.children(\"select\");\n\n            if (\"string\" == typeof s) {\n              if (void 0 === a) return r.data(s);\n              n[s] = a;\n            } else n = s;\n\n            return e.control.create(e, t, r.data(\"unit\"), r.val(), n.min || r.data(\"min\"), n.max || r.data(\"max\"), n.step || r.data(\"step\"));\n          },\n          value: function (e, t, i, s) {\n            var a = t.children(\"select\");\n            return void 0 !== s ? a.val(s) : a.val();\n          }\n        }\n      }\n    }), $.fn.extend({\n      timepicker: function (e) {\n        e = e || {};\n        var t = Array.prototype.slice.call(arguments);\n        return \"object\" == typeof e && (t[0] = $.extend(e, {\n          timeOnly: !0\n        })), $(this).each(function () {\n          $.fn.datetimepicker.apply($(this), t);\n        });\n      },\n      datetimepicker: function (e) {\n        e = e || {};\n        var t = arguments;\n        return \"string\" == typeof e ? \"getDate\" === e ? $.fn.datepicker.apply($(this[0]), t) : this.each(function () {\n          var e = $(this);\n          e.datepicker.apply(e, t);\n        }) : this.each(function () {\n          var t = $(this);\n          t.datepicker($.timepicker._newInst(t, e)._defaults);\n        });\n      }\n    }), $.datepicker.parseDateTime = function (e, t, i, s, a) {\n      var n = parseDateTimeInternal(e, t, i, s, a);\n\n      if (n.timeObj) {\n        var r = n.timeObj;\n        n.date.setHours(r.hour, r.minute, r.second, r.millisec), n.date.setMicroseconds(r.microsec);\n      }\n\n      return n.date;\n    }, $.datepicker.parseTime = function (e, t, i) {\n      var s = extendRemove(extendRemove({}, $.timepicker._defaults), i || {});\n      -1 !== e.replace(/\\'.*?\\'/g, \"\").indexOf(\"Z\");\n\n      var a = function (e, t, i) {\n        var s,\n            a = function (e, t) {\n          var i = [];\n          return e && $.merge(i, e), t && $.merge(i, t), i = $.map(i, function (e) {\n            return e.replace(/[.*+?|()\\[\\]{}\\\\]/g, \"\\\\$&\");\n          }), \"(\" + i.join(\"|\") + \")?\";\n        },\n            n = function (e) {\n          var t = e.toLowerCase().match(/(h{1,2}|m{1,2}|s{1,2}|l{1}|c{1}|t{1,2}|z|'.*?')/g),\n              i = {\n            h: -1,\n            m: -1,\n            s: -1,\n            l: -1,\n            c: -1,\n            t: -1,\n            z: -1\n          };\n          if (t) for (var s = 0; t.length > s; s++) -1 === i[(\"\" + t[s]).charAt(0)] && (i[(\"\" + t[s]).charAt(0)] = s + 1);\n          return i;\n        },\n            r = \"^\" + (\"\" + e).replace(/([hH]{1,2}|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g, function (e) {\n          var t = e.length;\n\n          switch (e.charAt(0).toLowerCase()) {\n            case \"h\":\n              return 1 === t ? \"(\\\\d?\\\\d)\" : \"(\\\\d{\" + t + \"})\";\n\n            case \"m\":\n              return 1 === t ? \"(\\\\d?\\\\d)\" : \"(\\\\d{\" + t + \"})\";\n\n            case \"s\":\n              return 1 === t ? \"(\\\\d?\\\\d)\" : \"(\\\\d{\" + t + \"})\";\n\n            case \"l\":\n              return \"(\\\\d?\\\\d?\\\\d)\";\n\n            case \"c\":\n              return \"(\\\\d?\\\\d?\\\\d)\";\n\n            case \"z\":\n              return \"(z|[-+]\\\\d\\\\d:?\\\\d\\\\d|\\\\S+)?\";\n\n            case \"t\":\n              return a(i.amNames, i.pmNames);\n\n            default:\n              return \"(\" + e.replace(/\\'/g, \"\").replace(/(\\.|\\$|\\^|\\\\|\\/|\\(|\\)|\\[|\\]|\\?|\\+|\\*)/g, function (e) {\n                return \"\\\\\" + e;\n              }) + \")?\";\n          }\n        }).replace(/\\s/g, \"\\\\s?\") + i.timeSuffix + \"$\",\n            l = n(e),\n            o = \"\";\n\n        s = t.match(RegExp(r, \"i\"));\n        var c = {\n          hour: 0,\n          minute: 0,\n          second: 0,\n          millisec: 0,\n          microsec: 0\n        };\n        return s ? (-1 !== l.t && (void 0 === s[l.t] || 0 === s[l.t].length ? (o = \"\", c.ampm = \"\") : (o = -1 !== $.inArray(s[l.t].toUpperCase(), i.amNames) ? \"AM\" : \"PM\", c.ampm = i[\"AM\" === o ? \"amNames\" : \"pmNames\"][0])), -1 !== l.h && (c.hour = \"AM\" === o && \"12\" === s[l.h] ? 0 : \"PM\" === o && \"12\" !== s[l.h] ? parseInt(s[l.h], 10) + 12 : Number(s[l.h])), -1 !== l.m && (c.minute = Number(s[l.m])), -1 !== l.s && (c.second = Number(s[l.s])), -1 !== l.l && (c.millisec = Number(s[l.l])), -1 !== l.c && (c.microsec = Number(s[l.c])), -1 !== l.z && void 0 !== s[l.z] && (c.timezone = $.timepicker.timezoneOffsetNumber(s[l.z])), c) : !1;\n      },\n          n = function (e, t, i) {\n        try {\n          var s = new Date(\"2012-01-01 \" + t);\n          if (isNaN(s.getTime()) && (s = new Date(\"2012-01-01T\" + t), isNaN(s.getTime()) && (s = new Date(\"01/01/2012 \" + t), isNaN(s.getTime())))) throw \"Unable to parse time with native Date: \" + t;\n          return {\n            hour: s.getHours(),\n            minute: s.getMinutes(),\n            second: s.getSeconds(),\n            millisec: s.getMilliseconds(),\n            microsec: s.getMicroseconds(),\n            timezone: -1 * s.getTimezoneOffset()\n          };\n        } catch (n) {\n          try {\n            return a(e, t, i);\n          } catch (r) {\n            $.timepicker.log(\"Unable to parse \\ntimeString: \" + t + \"\\ntimeFormat: \" + e);\n          }\n        }\n\n        return !1;\n      };\n\n      return \"function\" == typeof s.parse ? s.parse(e, t, s) : \"loose\" === s.parse ? n(e, t, s) : a(e, t, s);\n    }, $.datepicker.formatTime = function (e, t, i) {\n      i = i || {}, i = $.extend({}, $.timepicker._defaults, i), t = $.extend({\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisec: 0,\n        microsec: 0,\n        timezone: null\n      }, t);\n      var s = e,\n          a = i.amNames[0],\n          n = parseInt(t.hour, 10);\n      return n > 11 && (a = i.pmNames[0]), s = s.replace(/(?:HH?|hh?|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g, function (e) {\n        switch (e) {\n          case \"HH\":\n            return (\"0\" + n).slice(-2);\n\n          case \"H\":\n            return n;\n\n          case \"hh\":\n            return (\"0\" + convert24to12(n)).slice(-2);\n\n          case \"h\":\n            return convert24to12(n);\n\n          case \"mm\":\n            return (\"0\" + t.minute).slice(-2);\n\n          case \"m\":\n            return t.minute;\n\n          case \"ss\":\n            return (\"0\" + t.second).slice(-2);\n\n          case \"s\":\n            return t.second;\n\n          case \"l\":\n            return (\"00\" + t.millisec).slice(-3);\n\n          case \"c\":\n            return (\"00\" + t.microsec).slice(-3);\n\n          case \"z\":\n            return $.timepicker.timezoneOffsetString(null === t.timezone ? i.timezone : t.timezone, !1);\n\n          case \"Z\":\n            return $.timepicker.timezoneOffsetString(null === t.timezone ? i.timezone : t.timezone, !0);\n\n          case \"T\":\n            return a.charAt(0).toUpperCase();\n\n          case \"TT\":\n            return a.toUpperCase();\n\n          case \"t\":\n            return a.charAt(0).toLowerCase();\n\n          case \"tt\":\n            return a.toLowerCase();\n\n          default:\n            return e.replace(/'/g, \"\");\n        }\n      });\n    }, $.datepicker._base_selectDate = $.datepicker._selectDate, $.datepicker._selectDate = function (e, t) {\n      var i = this._getInst($(e)[0]),\n          s = this._get(i, \"timepicker\");\n\n      s ? (s._limitMinMaxDateTime(i, !0), i.inline = i.stay_open = !0, this._base_selectDate(e, t), i.inline = i.stay_open = !1, this._notifyChange(i), this._updateDatepicker(i)) : this._base_selectDate(e, t);\n    }, $.datepicker._base_updateDatepicker = $.datepicker._updateDatepicker, $.datepicker._updateDatepicker = function (e) {\n      var t = e.input[0];\n\n      if (!($.datepicker._curInst && $.datepicker._curInst !== e && $.datepicker._datepickerShowing && $.datepicker._lastInput !== t || \"boolean\" == typeof e.stay_open && e.stay_open !== !1)) {\n        this._base_updateDatepicker(e);\n\n        var i = this._get(e, \"timepicker\");\n\n        i && i._addTimePicker(e);\n      }\n    }, $.datepicker._base_doKeyPress = $.datepicker._doKeyPress, $.datepicker._doKeyPress = function (e) {\n      var t = $.datepicker._getInst(e.target),\n          i = $.datepicker._get(t, \"timepicker\");\n\n      if (i && $.datepicker._get(t, \"constrainInput\")) {\n        var s = i.support.ampm,\n            a = null !== i._defaults.showTimezone ? i._defaults.showTimezone : i.support.timezone,\n            n = $.datepicker._possibleChars($.datepicker._get(t, \"dateFormat\")),\n            r = (\"\" + i._defaults.timeFormat).replace(/[hms]/g, \"\").replace(/TT/g, s ? \"APM\" : \"\").replace(/Tt/g, s ? \"AaPpMm\" : \"\").replace(/tT/g, s ? \"AaPpMm\" : \"\").replace(/T/g, s ? \"AP\" : \"\").replace(/tt/g, s ? \"apm\" : \"\").replace(/t/g, s ? \"ap\" : \"\") + \" \" + i._defaults.separator + i._defaults.timeSuffix + (a ? i._defaults.timezoneList.join(\"\") : \"\") + i._defaults.amNames.join(\"\") + i._defaults.pmNames.join(\"\") + n,\n            l = String.fromCharCode(void 0 === e.charCode ? e.keyCode : e.charCode);\n\n        return e.ctrlKey || \" \" > l || !n || r.indexOf(l) > -1;\n      }\n\n      return $.datepicker._base_doKeyPress(e);\n    }, $.datepicker._base_updateAlternate = $.datepicker._updateAlternate, $.datepicker._updateAlternate = function (e) {\n      var t = this._get(e, \"timepicker\");\n\n      if (t) {\n        var i = t._defaults.altField;\n\n        if (i) {\n          var s = (t._defaults.altFormat || t._defaults.dateFormat, this._getDate(e)),\n              a = $.datepicker._getFormatConfig(e),\n              n = \"\",\n              r = t._defaults.altSeparator ? t._defaults.altSeparator : t._defaults.separator,\n              l = t._defaults.altTimeSuffix ? t._defaults.altTimeSuffix : t._defaults.timeSuffix,\n              o = null !== t._defaults.altTimeFormat ? t._defaults.altTimeFormat : t._defaults.timeFormat;\n\n          n += $.datepicker.formatTime(o, t, t._defaults) + l, t._defaults.timeOnly || t._defaults.altFieldTimeOnly || null === s || (n = t._defaults.altFormat ? $.datepicker.formatDate(t._defaults.altFormat, s, a) + r + n : t.formattedDate + r + n), $(i).val(n);\n        }\n      } else $.datepicker._base_updateAlternate(e);\n    }, $.datepicker._base_doKeyUp = $.datepicker._doKeyUp, $.datepicker._doKeyUp = function (e) {\n      var t = $.datepicker._getInst(e.target),\n          i = $.datepicker._get(t, \"timepicker\");\n\n      if (i && i._defaults.timeOnly && t.input.val() !== t.lastVal) try {\n        $.datepicker._updateDatepicker(t);\n      } catch (s) {\n        $.timepicker.log(s);\n      }\n      return $.datepicker._base_doKeyUp(e);\n    }, $.datepicker._base_gotoToday = $.datepicker._gotoToday, $.datepicker._gotoToday = function (e) {\n      var t = this._getInst($(e)[0]),\n          i = t.dpDiv;\n\n      this._base_gotoToday(e);\n\n      var s = this._get(t, \"timepicker\");\n\n      selectLocalTimezone(s);\n      var a = new Date();\n      this._setTime(t, a), $(\".ui-datepicker-today\", i).click();\n    }, $.datepicker._disableTimepickerDatepicker = function (e) {\n      var t = this._getInst(e);\n\n      if (t) {\n        var i = this._get(t, \"timepicker\");\n\n        $(e).datepicker(\"getDate\"), i && (t.settings.showTimepicker = !1, i._defaults.showTimepicker = !1, i._updateDateTime(t));\n      }\n    }, $.datepicker._enableTimepickerDatepicker = function (e) {\n      var t = this._getInst(e);\n\n      if (t) {\n        var i = this._get(t, \"timepicker\");\n\n        $(e).datepicker(\"getDate\"), i && (t.settings.showTimepicker = !0, i._defaults.showTimepicker = !0, i._addTimePicker(t), i._updateDateTime(t));\n      }\n    }, $.datepicker._setTime = function (e, t) {\n      var i = this._get(e, \"timepicker\");\n\n      if (i) {\n        var s = i._defaults;\n        i.hour = t ? t.getHours() : s.hour, i.minute = t ? t.getMinutes() : s.minute, i.second = t ? t.getSeconds() : s.second, i.millisec = t ? t.getMilliseconds() : s.millisec, i.microsec = t ? t.getMicroseconds() : s.microsec, i._limitMinMaxDateTime(e, !0), i._onTimeChange(), i._updateDateTime(e);\n      }\n    }, $.datepicker._setTimeDatepicker = function (e, t, i) {\n      var s = this._getInst(e);\n\n      if (s) {\n        var a = this._get(s, \"timepicker\");\n\n        if (a) {\n          this._setDateFromField(s);\n\n          var n;\n          t && (\"string\" == typeof t ? (a._parseTime(t, i), n = new Date(), n.setHours(a.hour, a.minute, a.second, a.millisec), n.setMicroseconds(a.microsec)) : (n = new Date(t.getTime()), n.setMicroseconds(t.getMicroseconds())), \"Invalid Date\" == \"\" + n && (n = void 0), this._setTime(s, n));\n        }\n      }\n    }, $.datepicker._base_setDateDatepicker = $.datepicker._setDateDatepicker, $.datepicker._setDateDatepicker = function (e, t) {\n      var i = this._getInst(e);\n\n      if (i) {\n        \"string\" == typeof t && (t = new Date(t), t.getTime() || $.timepicker.log(\"Error creating Date object from string.\"));\n\n        var s,\n            a = this._get(i, \"timepicker\");\n\n        t instanceof Date ? (s = new Date(t.getTime()), s.setMicroseconds(t.getMicroseconds())) : s = t, a && s && (a.support.timezone || null !== a._defaults.timezone || (a.timezone = -1 * s.getTimezoneOffset()), t = $.timepicker.timezoneAdjust(t, a.timezone), s = $.timepicker.timezoneAdjust(s, a.timezone)), this._updateDatepicker(i), this._base_setDateDatepicker.apply(this, arguments), this._setTimeDatepicker(e, s, !0);\n      }\n    }, $.datepicker._base_getDateDatepicker = $.datepicker._getDateDatepicker, $.datepicker._getDateDatepicker = function (e, t) {\n      var i = this._getInst(e);\n\n      if (i) {\n        var s = this._get(i, \"timepicker\");\n\n        if (s) {\n          void 0 === i.lastVal && this._setDateFromField(i, t);\n\n          var a = this._getDate(i);\n\n          return a && s._parseTime($(e).val(), s.timeOnly) && (a.setHours(s.hour, s.minute, s.second, s.millisec), a.setMicroseconds(s.microsec), null != s.timezone && (s.support.timezone || null !== s._defaults.timezone || (s.timezone = -1 * a.getTimezoneOffset()), a = $.timepicker.timezoneAdjust(a, s.timezone))), a;\n        }\n\n        return this._base_getDateDatepicker(e, t);\n      }\n    }, $.datepicker._base_parseDate = $.datepicker.parseDate, $.datepicker.parseDate = function (e, t, i) {\n      var s;\n\n      try {\n        s = this._base_parseDate(e, t, i);\n      } catch (a) {\n        if (!(a.indexOf(\":\") >= 0)) throw a;\n        s = this._base_parseDate(e, t.substring(0, t.length - (a.length - a.indexOf(\":\") - 2)), i), $.timepicker.log(\"Error parsing the date string: \" + a + \"\\ndate string = \" + t + \"\\ndate format = \" + e);\n      }\n\n      return s;\n    }, $.datepicker._base_formatDate = $.datepicker._formatDate, $.datepicker._formatDate = function (e) {\n      var t = this._get(e, \"timepicker\");\n\n      return t ? (t._updateDateTime(e), t.$input.val()) : this._base_formatDate(e);\n    }, $.datepicker._base_optionDatepicker = $.datepicker._optionDatepicker, $.datepicker._optionDatepicker = function (e, t, i) {\n      var s,\n          a = this._getInst(e);\n\n      if (!a) return null;\n\n      var n = this._get(a, \"timepicker\");\n\n      if (n) {\n        var r,\n            l = null,\n            o = null,\n            c = null,\n            u = n._defaults.evnts,\n            m = {};\n\n        if (\"string\" == typeof t) {\n          if (\"minDate\" === t || \"minDateTime\" === t) l = i;else if (\"maxDate\" === t || \"maxDateTime\" === t) o = i;else if (\"onSelect\" === t) c = i;else if (u.hasOwnProperty(t)) {\n            if (i === void 0) return u[t];\n            m[t] = i, s = {};\n          }\n        } else if (\"object\" == typeof t) {\n          t.minDate ? l = t.minDate : t.minDateTime ? l = t.minDateTime : t.maxDate ? o = t.maxDate : t.maxDateTime && (o = t.maxDateTime);\n\n          for (r in u) u.hasOwnProperty(r) && t[r] && (m[r] = t[r]);\n        }\n\n        for (r in m) m.hasOwnProperty(r) && (u[r] = m[r], s || (s = $.extend({}, t)), delete s[r]);\n\n        if (s && isEmptyObject(s)) return;\n        l ? (l = 0 === l ? new Date() : new Date(l), n._defaults.minDate = l, n._defaults.minDateTime = l) : o ? (o = 0 === o ? new Date() : new Date(o), n._defaults.maxDate = o, n._defaults.maxDateTime = o) : c && (n._defaults.onSelect = c);\n      }\n\n      return void 0 === i ? this._base_optionDatepicker.call($.datepicker, e, t) : this._base_optionDatepicker.call($.datepicker, e, s || t, i);\n    };\n\n    var isEmptyObject = function (e) {\n      var t;\n\n      for (t in e) if (e.hasOwnProperty(t)) return !1;\n\n      return !0;\n    },\n        extendRemove = function (e, t) {\n      $.extend(e, t);\n\n      for (var i in t) (null === t[i] || void 0 === t[i]) && (e[i] = t[i]);\n\n      return e;\n    },\n        detectSupport = function (e) {\n      var t = e.replace(/'.*?'/g, \"\").toLowerCase(),\n          i = function (e, t) {\n        return -1 !== e.indexOf(t) ? !0 : !1;\n      };\n\n      return {\n        hour: i(t, \"h\"),\n        minute: i(t, \"m\"),\n        second: i(t, \"s\"),\n        millisec: i(t, \"l\"),\n        microsec: i(t, \"c\"),\n        timezone: i(t, \"z\"),\n        ampm: i(t, \"t\") && i(e, \"h\"),\n        iso8601: i(e, \"Z\")\n      };\n    },\n        convert24to12 = function (e) {\n      return e %= 12, 0 === e && (e = 12), e + \"\";\n    },\n        computeEffectiveSetting = function (e, t) {\n      return e && e[t] ? e[t] : $.timepicker._defaults[t];\n    },\n        splitDateTime = function (e, t) {\n      var i = computeEffectiveSetting(t, \"separator\"),\n          s = computeEffectiveSetting(t, \"timeFormat\"),\n          a = s.split(i),\n          n = a.length,\n          r = e.split(i),\n          l = r.length;\n      return l > 1 ? {\n        dateString: r.splice(0, l - n).join(i),\n        timeString: r.splice(0, n).join(i)\n      } : {\n        dateString: e,\n        timeString: \"\"\n      };\n    },\n        parseDateTimeInternal = function (e, t, i, s, a) {\n      var n, r, l;\n      if (r = splitDateTime(i, a), n = $.datepicker._base_parseDate(e, r.dateString, s), \"\" === r.timeString) return {\n        date: n\n      };\n      if (l = $.datepicker.parseTime(t, r.timeString, a), !l) throw \"Wrong time format\";\n      return {\n        date: n,\n        timeObj: l\n      };\n    },\n        selectLocalTimezone = function (e, t) {\n      if (e && e.timezone_select) {\n        var i = t || new Date();\n        e.timezone_select.val(-i.getTimezoneOffset());\n      }\n    };\n\n    $.timepicker = new Timepicker(), $.timepicker.timezoneOffsetString = function (e, t) {\n      if (isNaN(e) || e > 840 || -720 > e) return e;\n      var i = e,\n          s = i % 60,\n          a = (i - s) / 60,\n          n = t ? \":\" : \"\",\n          r = (i >= 0 ? \"+\" : \"-\") + (\"0\" + Math.abs(a)).slice(-2) + n + (\"0\" + Math.abs(s)).slice(-2);\n      return \"+00:00\" === r ? \"Z\" : r;\n    }, $.timepicker.timezoneOffsetNumber = function (e) {\n      var t = (\"\" + e).replace(\":\", \"\");\n      return \"Z\" === t.toUpperCase() ? 0 : /^(\\-|\\+)\\d{4}$/.test(t) ? (\"-\" === t.substr(0, 1) ? -1 : 1) * (60 * parseInt(t.substr(1, 2), 10) + parseInt(t.substr(3, 2), 10)) : e;\n    }, $.timepicker.timezoneAdjust = function (e, t) {\n      var i = $.timepicker.timezoneOffsetNumber(t);\n      return isNaN(i) || e.setMinutes(e.getMinutes() + -e.getTimezoneOffset() - i), e;\n    }, $.timepicker.timeRange = function (e, t, i) {\n      return $.timepicker.handleRange(\"timepicker\", e, t, i);\n    }, $.timepicker.datetimeRange = function (e, t, i) {\n      $.timepicker.handleRange(\"datetimepicker\", e, t, i);\n    }, $.timepicker.dateRange = function (e, t, i) {\n      $.timepicker.handleRange(\"datepicker\", e, t, i);\n    }, $.timepicker.handleRange = function (e, t, i, s) {\n      function a(a, n) {\n        var r = t[e](\"getDate\"),\n            l = i[e](\"getDate\"),\n            o = a[e](\"getDate\");\n\n        if (null !== r) {\n          var c = new Date(r.getTime()),\n              u = new Date(r.getTime());\n          c.setMilliseconds(c.getMilliseconds() + s.minInterval), u.setMilliseconds(u.getMilliseconds() + s.maxInterval), s.minInterval > 0 && c > l ? i[e](\"setDate\", c) : s.maxInterval > 0 && l > u ? i[e](\"setDate\", u) : r > l && n[e](\"setDate\", o);\n        }\n      }\n\n      function n(t, i, a) {\n        if (t.val()) {\n          var n = t[e].call(t, \"getDate\");\n          null !== n && s.minInterval > 0 && (\"minDate\" === a && n.setMilliseconds(n.getMilliseconds() + s.minInterval), \"maxDate\" === a && n.setMilliseconds(n.getMilliseconds() - s.minInterval)), n.getTime && i[e].call(i, \"option\", a, n);\n        }\n      }\n\n      return s = $.extend({}, {\n        minInterval: 0,\n        maxInterval: 0,\n        start: {},\n        end: {}\n      }, s), $.fn[e].call(t, $.extend({\n        onClose: function () {\n          a($(this), i);\n        },\n        onSelect: function () {\n          n($(this), i, \"minDate\");\n        }\n      }, s, s.start)), $.fn[e].call(i, $.extend({\n        onClose: function () {\n          a($(this), t);\n        },\n        onSelect: function () {\n          n($(this), t, \"maxDate\");\n        }\n      }, s, s.end)), a(t, i), n(t, i, \"minDate\"), n(i, t, \"maxDate\"), $([t.get(0), i.get(0)]);\n    }, $.timepicker.log = function (e) {\n      window.console && window.console.log(e);\n    }, $.timepicker._util = {\n      _extendRemove: extendRemove,\n      _isEmptyObject: isEmptyObject,\n      _convert24to12: convert24to12,\n      _detectSupport: detectSupport,\n      _selectLocalTimezone: selectLocalTimezone,\n      _computeEffectiveSetting: computeEffectiveSetting,\n      _splitDateTime: splitDateTime,\n      _parseDateTimeInternal: parseDateTimeInternal\n    }, Date.prototype.getMicroseconds || (Date.prototype.microseconds = 0, Date.prototype.getMicroseconds = function () {\n      return this.microseconds;\n    }, Date.prototype.setMicroseconds = function (e) {\n      return this.setMilliseconds(this.getMilliseconds() + Math.floor(e / 1e3)), this.microseconds = e % 1e3, this;\n    }), $.timepicker.version = \"1.4.3\";\n  }\n})(jQuery);\n\n//# sourceURL=webpack:///./src/js/jquery-ui-timepicker.js?");

/***/ }),

/***/ "./src/js/prince-admin.js":
/*!********************************!*\
  !*** ./src/js/prince-admin.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Option Tree UI\r\n *\r\n * Dependencies: jQuery, jQuery UI, ColorPicker\r\n *\r\n * @author Prince Ahmed (israilahmed5@gmail.com)\r\n */\n(function ($) {\n  PRINCE = {\n    processing: false,\n    init: function () {\n      this.init_hide_body();\n      this.init_sortable();\n      this.init_add();\n      this.init_edit();\n      this.init_remove();\n      this.init_edit_title();\n      this.init_edit_id();\n      this.init_activate_layout();\n      this.init_conditions();\n      this.init_upload();\n      this.init_upload_remove();\n      this.init_numeric_slider();\n      this.init_tabs();\n      this.init_radio_image_select();\n      this.init_select_wrapper();\n      this.bind_select_wrapper();\n      this.init_google_fonts();\n      this.fix_upload_parent();\n      this.fix_textarea();\n      this.replicate_ajax();\n      this.reset_settings(); //todo uncomment when need css & js editor\n      //this.css_editor_mode();\n      //this.javascript_editor_mode();\n    },\n    init_hide_body: function (elm, type) {\n      var css = '.prince-setting-body';\n\n      if (type === 'parent') {\n        $(css).not(elm.parent().parent().children(css)).hide();\n      } else if (type === 'child') {\n        elm.closest('ul').find(css).not(elm.parent().parent().children(css)).hide();\n      } else if (type === 'child-add') {\n        elm.children().find(css).hide();\n      } else if (type === 'toggle') {\n        elm.parent().parent().children(css).toggle();\n      } else {\n        $(css).hide();\n      }\n    },\n    init_remove_active: function (elm, type) {\n      var css = '.prince-setting-edit';\n\n      if (type === 'parent') {\n        $(css).not(elm).removeClass('active');\n      } else if (type === 'child') {\n        elm.closest('ul').find(css).not(elm).removeClass('active');\n      } else if (type === 'child-add') {\n        elm.children().find(css).removeClass('active');\n      } else {\n        $(css).removeClass('active');\n      }\n    },\n    init_sortable: function (scope) {\n      scope = scope || document;\n      $('.prince-sortable', scope).each(function () {\n        if ($(this).children('li').length) {\n          var elm = $(this);\n          elm.show();\n          elm.sortable({\n            items: 'li:not(.ui-state-disabled)',\n            handle: 'div.open',\n            placeholder: 'ui-state-highlight',\n            start: function (event, ui) {\n              ui.placeholder.height(ui.item.height() - 2);\n            },\n            stop: function (evt, ui) {\n              setTimeout(function () {\n                PRINCE.update_ids(elm);\n              }, 200);\n            }\n          });\n        }\n      });\n    },\n    init_add: function () {\n      $(document).on('click', '.prince-section-add', function (e) {\n        e.preventDefault();\n        PRINCE.add(this, 'section');\n      });\n      $(document).on('click', '.prince-setting-add', function (e) {\n        e.preventDefault();\n        PRINCE.add(this, 'setting');\n      });\n      $(document).on('click', '.prince-help-add', function (e) {\n        e.preventDefault();\n        PRINCE.add(this, 'the_contextual_help');\n      });\n      $(document).on('click', '.prince-choice-add', function (e) {\n        e.preventDefault();\n        PRINCE.add(this, 'choice');\n      });\n      $(document).on('click', '.prince-list-item-add', function (e) {\n        e.preventDefault();\n        PRINCE.add(this, 'list_item');\n      });\n      $(document).on('click', '.prince-social-links-add', function (e) {\n        e.preventDefault();\n        PRINCE.add(this, 'social_links');\n      });\n      $(document).on('click', '.prince-list-item-setting-add', function (e) {\n        e.preventDefault();\n\n        if ($(this).parents('ul').parents('ul').hasClass('ui-sortable')) {\n          alert(prince.setting_limit);\n          return false;\n        }\n\n        PRINCE.add(this, 'list_item_setting');\n      });\n    },\n    init_edit: function () {\n      $(document).on('click', '.prince-setting-edit', function (e) {\n        e.preventDefault();\n\n        if ($(this).parents().hasClass('prince-setting-body')) {\n          PRINCE.init_remove_active($(this), 'child');\n          PRINCE.init_hide_body($(this), 'child');\n        } else {\n          PRINCE.init_remove_active($(this), 'parent');\n          PRINCE.init_hide_body($(this), 'parent');\n        }\n\n        $(this).toggleClass('active');\n        PRINCE.init_hide_body($(this), 'toggle');\n      });\n    },\n    init_remove: function () {\n      $(document).on('click', '.prince-setting-remove', function (event) {\n        event.preventDefault();\n\n        if ($(this).parents('li').hasClass('ui-state-disabled')) {\n          alert(prince.remove_no);\n          return false;\n        }\n\n        var agree = confirm(prince.remove_agree);\n\n        if (agree) {\n          var list = $(this).parents('ul');\n          PRINCE.remove(this);\n          setTimeout(function () {\n            PRINCE.update_ids(list);\n          }, 200);\n        }\n\n        return false;\n      });\n    },\n    init_edit_title: function () {\n      $(document).on('keyup', '.prince-setting-title', function () {\n        PRINCE.edit_title(this);\n      }); // Automatically fill option IDs with clean versions of their respective option labels\n\n      $(document).on('blur', '.prince-setting-title', function () {\n        var optionId = $(this).parents('.prince-setting-body').find('[type=\"text\"][name$=\"id]\"]');\n\n        if (optionId.val() === '') {\n          optionId.val($(this).val().replace(/[^a-z0-9]/gi, '_').toLowerCase());\n        }\n      });\n    },\n    init_edit_id: function () {\n      $(document).on('keyup', '.section-id', function () {\n        PRINCE.update_id(this);\n      });\n    },\n    init_activate_layout: function () {\n      $(document).on('click', '.prince-layout-activate', function () {\n        var active = $(this).parents('.prince-setting').find('.open').text();\n        $('.prince-layout-activate').removeClass('active');\n        $(this).toggleClass('active');\n        $('.active-layout-input').attr({\n          'value': active\n        });\n      });\n      $(document).on('change', '#prince-options-layouts-form select', function () {\n        var agree = confirm(prince.activate_layout_agree);\n\n        if (agree) {\n          $('#prince-options-layouts-form').submit();\n        } else {\n          var active = $('#the_current_layout').attr('value');\n          $('#prince-options-layouts-form select option[value=\"' + active + '\"]').attr({\n            'selected': 'selected'\n          });\n          $('#prince-options-layouts-form select').prev('span').replaceWith('<span>' + active + '</span>');\n        }\n      });\n    },\n    add: function (elm, type) {\n      var self = this,\n          list = '',\n          list_class = '',\n          name = '',\n          post_id = 0,\n          get_option = '',\n          settings = '';\n\n      if (type === 'the_contextual_help') {\n        list = $(elm).parent().find('ul:last');\n        list_class = 'list-contextual-help';\n      } else if (type === 'choice') {\n        list = $(elm).parent().children('ul');\n        list_class = 'list-choice';\n      } else if (type === 'list_item') {\n        list = $(elm).parent().children('ul');\n        list_class = 'list-sub-setting';\n      } else if (type === 'list_item_setting') {\n        list = $(elm).parent().children('ul');\n        list_class = 'list-sub-setting';\n      } else if (type === 'social_links') {\n        list = $(elm).parent().children('ul');\n        list_class = 'list-sub-setting';\n      } else {\n        list = $(elm).parent().find('ul:first');\n        list_class = type === 'section' ? 'list-section' : 'list-setting';\n      }\n\n      name = list.data('name');\n      post_id = list.data('id');\n      get_option = list.data('getOption');\n      settings = $('#' + name + '_settings_array').val();\n\n      if (this.processing === false) {\n        this.processing = true;\n        var count = parseInt(list.children('li').length);\n\n        if (type === 'list_item' || type === 'social_links') {\n          list.find('li input.prince-setting-title', self).each(function () {\n            var setting = $(this).attr('name'),\n                regex = /\\[([0-9]+)\\]/,\n                matches = setting.match(regex),\n                id = null != matches ? parseInt(matches[1]) : 0;\n            id++;\n\n            if (id > count) {\n              count = id;\n            }\n          });\n        }\n\n        $.ajax({\n          url: prince.ajax,\n          type: 'post',\n          data: {\n            action: 'add_' + type,\n            count: count,\n            name: name,\n            post_id: post_id,\n            get_option: get_option,\n            settings: settings,\n            type: type,\n            nonce: prince.nonce\n          },\n          complete: function (data) {\n            if (type === 'choice' || type === 'list_item_setting') {\n              PRINCE.init_remove_active(list, 'child-add');\n              PRINCE.init_hide_body(list, 'child-add');\n            } else {\n              PRINCE.init_remove_active();\n              PRINCE.init_hide_body();\n            }\n\n            var listItem = $('<li class=\"ui-state-default ' + list_class + '\">' + data.responseText + '</li>');\n            list.append(listItem);\n            list.children().last().find('.prince-setting-edit').toggleClass('active');\n            list.children().last().find('.prince-setting-body').toggle();\n            list.children().last().find('.prince-setting-title').focus();\n\n            if (type !== 'the_contextual_help') {\n              PRINCE.update_ids(list);\n            }\n\n            PRINCE.init_sortable(listItem);\n            PRINCE.init_select_wrapper(listItem);\n            PRINCE.init_numeric_slider(listItem);\n            PRINCE.parse_condition();\n            self.processing = false;\n          }\n        });\n      }\n    },\n    remove: function (e) {\n      $(e).parent().parent().parent('li').remove();\n    },\n    edit_title: function (e) {\n      if (this.timer) {\n        clearTimeout(e.timer);\n      }\n\n      this.timer = setTimeout(function () {\n        $(e).parent().parent().parent().parent().parent().children('.open').text(e.value);\n      }, 100);\n      return true;\n    },\n    update_id: function (e) {\n      if (this.timer) {\n        clearTimeout(e.timer);\n      }\n\n      this.timer = setTimeout(function () {\n        PRINCE.update_ids($(e).parents('ul'));\n      }, 100);\n      return true;\n    },\n    update_ids: function (list) {\n      var last_section,\n          section,\n          list_items = list.children('li');\n      list_items.each(function (index) {\n        if ($(this).hasClass('list-section')) {\n          section = $(this).find('.section-id').val().trim().toLowerCase().replace(/[^a-z0-9]/gi, '_');\n\n          if (!section) {\n            section = $(this).find('.section-title').val().trim().toLowerCase().replace(/[^a-z0-9]/gi, '_');\n          }\n\n          if (!section) {\n            section = last_section;\n          }\n        }\n\n        if ($(this).hasClass('list-setting')) {\n          $(this).find('.hidden-section').attr({\n            'value': section\n          });\n        }\n\n        last_section = section;\n      });\n    },\n    condition_objects: function () {\n      return 'select, input[type=\"radio\"]:checked, input[type=\"text\"], input[type=\"hidden\"], input.prince-numeric-slider-hidden-input';\n    },\n    match_conditions: function (condition) {\n      var match;\n      var regex = /(.+?):(is|not|contains|less_than|less_than_or_equal_to|greater_than|greater_than_or_equal_to)\\((.*?)\\),?/g;\n      var conditions = [];\n\n      while (match = regex.exec(condition)) {\n        conditions.push({\n          'check': match[1],\n          'rule': match[2],\n          'value': match[3] || ''\n        });\n      }\n\n      return conditions;\n    },\n    parse_condition: function () {\n      $('.format-settings[id^=\"setting_\"][data-condition]').each(function () {\n        var passed;\n        var conditions = PRINCE.match_conditions($(this).data('condition'));\n        var operator = ($(this).data('operator') || 'and').toLowerCase();\n        $.each(conditions, function (index, condition) {\n          var target = $('#setting_' + condition.check);\n          var targetEl = !!target.length && target.find(PRINCE.condition_objects()).first();\n\n          if (!target.length || !targetEl.length && condition.value.toString() != '') {\n            return;\n          }\n\n          var v1 = targetEl.length ? targetEl.val().toString() : '';\n          var v2 = condition.value.toString();\n          var result;\n\n          switch (condition.rule) {\n            case 'less_than':\n              result = parseInt(v1) < parseInt(v2);\n              break;\n\n            case 'less_than_or_equal_to':\n              result = parseInt(v1) <= parseInt(v2);\n              break;\n\n            case 'greater_than':\n              result = parseInt(v1) > parseInt(v2);\n              break;\n\n            case 'greater_than_or_equal_to':\n              result = parseInt(v1) >= parseInt(v2);\n              break;\n\n            case 'contains':\n              result = v1.indexOf(v2) !== -1 ? true : false;\n              break;\n\n            case 'is':\n              result = v1 == v2;\n              break;\n\n            case 'not':\n              result = v1 != v2;\n              break;\n          }\n\n          if ('undefined' == typeof passed) {\n            passed = result;\n          }\n\n          switch (operator) {\n            case 'or':\n              passed = passed || result;\n              break;\n\n            case 'and':\n            default:\n              passed = passed && result;\n              break;\n          }\n        });\n\n        if (passed) {\n          $(this).animate({\n            opacity: 'show',\n            height: 'show'\n          }, 200);\n        } else {\n          $(this).animate({\n            opacity: 'hide',\n            height: 'hide'\n          }, 200);\n        } //delete passed;\n\n      });\n    },\n    init_conditions: function () {\n      var delay = function () {\n        var timer = 0;\n        return function (callback, ms) {\n          clearTimeout(timer);\n          timer = setTimeout(callback, ms);\n        };\n      }();\n\n      $('.format-settings[id^=\"setting_\"]').on('change.conditionals, keyup.conditionals', PRINCE.condition_objects(), function (e) {\n        if (e.type === 'keyup') {\n          // handle keyup event only once every 500ms\n          delay(function () {\n            PRINCE.parse_condition();\n          }, 500);\n        } else {\n          PRINCE.parse_condition();\n        }\n\n        PRINCE.load_editors();\n      });\n      PRINCE.parse_condition();\n    },\n    init_upload: function () {\n      $(document).on('click', '.prince_upload_media', function () {\n        var field_id = $(this).parent('.prince-ui-upload-parent').find('input').attr('id'),\n            post_id = $(this).attr('rel'),\n            save_attachment_id = $('#' + field_id).hasClass('prince-upload-attachment-id'),\n            btnContent = '';\n\n        if (window.wp && wp.media) {\n          window.prince_media_frame = window.prince_media_frame || new wp.media.view.MediaFrame.Select({\n            title: $(this).attr('title'),\n            button: {\n              text: prince.upload_text\n            },\n            multiple: false\n          });\n          window.prince_media_frame.on('select', function () {\n            var attachment = window.prince_media_frame.state().get('selection').first(),\n                href = attachment.attributes.url,\n                attachment_id = attachment.attributes.id,\n                mime = attachment.attributes.mime,\n                regex = /^image\\/(?:jpe?g|png|gif|x-icon)$/i;\n\n            if (mime.match(regex)) {\n              btnContent += '<div class=\"prince-ui-image-wrap\"><img src=\"' + href + '\" alt=\"\" /></div>';\n            }\n\n            btnContent += '<a href=\"javascript:(void);\" class=\"prince-ui-remove-media prince-ui-button button button-secondary light\" title=\"' + prince.remove_media_text + '\"><span class=\"icon dashicons dashicons-trash\"></span></a>';\n            $('#' + field_id).val(save_attachment_id ? attachment_id : href);\n            $('#' + field_id + '_media').remove();\n            $('#' + field_id).parent().parent('div').append('<div class=\"prince-ui-media-wrap\" id=\"' + field_id + '_media\" />');\n            $('#' + field_id + '_media').append(btnContent).slideDown();\n            window.prince_media_frame.off('select');\n          }).open();\n        } else {\n          var backup = window.send_to_editor,\n              intval = window.setInterval(function () {\n            if ($('#TB_iframeContent').length > 0 && $('#TB_iframeContent').attr('src').indexOf(\"&field_id=\") !== -1) {\n              $('#TB_iframeContent').contents().find('#tab-type_url').hide();\n            }\n\n            $('#TB_iframeContent').contents().find('.savesend .button').val(prince.upload_text);\n          }, 50);\n          tb_show('', 'media-upload.php?post_id=' + post_id + '&field_id=' + field_id + '&type=image&TB_iframe=1');\n\n          window.send_to_editor = function (html) {\n            var href = $(html).find('img').attr('src');\n\n            if (typeof href == 'undefined') {\n              href = $(html).attr('src');\n            }\n\n            if (typeof href == 'undefined') {\n              href = $(html).attr('href');\n            }\n\n            var image = /\\.(?:jpe?g|png|gif|ico)$/i;\n\n            if (href.match(image) && PRINCE.url_exists(href)) {\n              btnContent += '<div class=\"prince-ui-image-wrap\"><img src=\"' + href + '\" alt=\"\" /></div>';\n            }\n\n            btnContent += '<a href=\"javascript:(void);\" class=\"prince-ui-remove-media prince-ui-button button button-secondary light\" title=\"' + prince.remove_media_text + '\"><span class=\"icon dashicons dashicons-trash\"></span></a>';\n            $('#' + field_id).val(href);\n            $('#' + field_id + '_media').remove();\n            $('#' + field_id).parent().parent('div').append('<div class=\"prince-ui-media-wrap\" id=\"' + field_id + '_media\" />');\n            $('#' + field_id + '_media').append(btnContent).slideDown();\n            PRINCE.fix_upload_parent();\n            tb_remove();\n            window.clearInterval(intval);\n            window.send_to_editor = backup;\n          };\n        }\n\n        return false;\n      });\n    },\n    init_upload_remove: function () {\n      $(document).on('click', '.prince-ui-remove-media', function (event) {\n        event.preventDefault();\n        var agree = confirm(prince.remove_agree);\n\n        if (agree) {\n          PRINCE.remove_image(this);\n          return false;\n        }\n\n        return false;\n      });\n    },\n    init_upload_fix: function (elm) {\n      var id = $(elm).attr('id'),\n          val = $(elm).val(),\n          img = $(elm).parent().next('.prince-ui-media-wrap').find('img'),\n          src = img.attr('src'),\n          btnContent = '';\n\n      if (val == src) {\n        return;\n      }\n\n      if (val != src) {\n        img.attr('src', val);\n      }\n\n      if (val !== '' && (typeof src == 'undefined' || src == false) && PRINCE.url_exists(val)) {\n        var image = /\\.(?:jpe?g|png|gif|ico)$/i;\n\n        if (val.match(image)) {\n          btnContent += '<div class=\"prince-ui-image-wrap\"><img src=\"' + val + '\" alt=\"\" /></div>';\n        }\n\n        btnContent += '<a href=\"javascript:(void);\" class=\"prince-ui-remove-media prince-ui-button button button-secondary light\" title=\"' + prince.remove_media_text + '\"><span class=\"icon dashicons dashicons-trash\"></span></a>';\n        $('#' + id).val(val);\n        $('#' + id + '_media').remove();\n        $('#' + id).parent().parent('div').append('<div class=\"prince-ui-media-wrap\" id=\"' + id + '_media\" />');\n        $('#' + id + '_media').append(btnContent).slideDown();\n      } else if (val == '' || !PRINCE.url_exists(val)) {\n        $(elm).parent().next('.prince-ui-media-wrap').remove();\n      }\n    },\n    init_numeric_slider: function (scope) {\n      scope = scope || document;\n      $(\".prince-numeric-slider-wrap\", scope).each(function () {\n        var hidden = $(\".prince-numeric-slider-hidden-input\", this),\n            value = hidden.val(),\n            helper = $(\".prince-numeric-slider-helper-input\", this);\n\n        if (!value) {\n          value = hidden.data(\"min\");\n          helper.val(value);\n        }\n\n        $(\".prince-numeric-slider\", this).slider({\n          min: hidden.data(\"min\"),\n          max: hidden.data(\"max\"),\n          step: hidden.data(\"step\"),\n          value: value,\n          slide: function (event, ui) {\n            hidden.add(helper).val(ui.value).trigger('change');\n          },\n          create: function () {\n            hidden.val($(this).slider('value'));\n          },\n          change: function () {\n            PRINCE.parse_condition();\n          }\n        });\n      });\n    },\n    init_tabs: function () {\n      $(\".wrap.settings-wrap .ui-tabs\").tabs({\n        fx: {\n          opacity: \"toggle\",\n          duration: \"fast\"\n        }\n      });\n      $(\".wrap.settings-wrap .ui-tabs a.ui-tabs-anchor\").on(\"click\", function (event, ui) {\n        var obj = \"input[name='_wp_http_referer']\";\n\n        if ($(obj).length > 0) {\n          var url = $(obj).val(),\n              hash = $(this).attr('href');\n\n          if (url.indexOf(\"#\") != -1) {\n            var o = url.split(\"#\")[1],\n                n = hash.split(\"#\")[1];\n            url = url.replace(o, n);\n          } else {\n            url = url + hash;\n          }\n\n          $(obj).val(url);\n        }\n      });\n    },\n    init_radio_image_select: function () {\n      $(document).on('click', '.prince-ui-radio-image', function () {\n        $(this).closest('.type-radio-image').find('.prince-ui-radio-image').removeClass('prince-ui-radio-image-selected');\n        $(this).toggleClass('prince-ui-radio-image-selected');\n        $(this).parent().find('.prince-ui-radio').prop('checked', true).trigger('change');\n      });\n    },\n    init_select_wrapper: function (scope) {\n      scope = scope || document;\n      $('.prince-ui-select', scope).each(function () {\n        if (!$(this).parent().hasClass('select-wrapper')) {\n          $(this).wrap('<div class=\"select-wrapper\" />');\n          $(this).parent('.select-wrapper').prepend('<span>' + $(this).find('option:selected').text() + '</span>');\n        }\n      });\n    },\n    bind_select_wrapper: function () {\n      $(document).on('change', '.prince-ui-select', function () {\n        $(this).prev('span').replaceWith('<span>' + $(this).find('option:selected').text() + '</span>');\n      });\n    },\n    init_google_fonts: function () {\n      var update_items = function (input, items, element) {\n        var itemsUI = input.closest('.type-google-font-group').find(element);\n\n        if (itemsUI.length) {\n          itemsUI.empty();\n          itemsUI.append($.map(items, function (item) {\n            var input = document.createElement('input'),\n                label = document.createElement('label');\n            input.type = 'checkbox';\n            input.id = (itemsUI.data('field-id-prefix') || '') + item;\n            input.name = (itemsUI.data('field-name') || '') + '[]';\n            input.value = item;\n            label.innerHTML = item;\n            $(label).attr('for', input.id);\n            return $(document.createElement('p')).addClass('checkbox-wrap').append([input, label]);\n          }));\n        }\n      };\n\n      $(document).on('change', '.prince-google-font-family select', function () {\n        var input = $(this);\n        $.ajax({\n          url: prince.ajax,\n          type: 'POST',\n          dataType: 'json',\n          data: {\n            action: 'prince_google_font',\n            family: input.val(),\n            field_id: input.attr('id')\n          }\n        }).done(function (response) {\n          if (response.hasOwnProperty('variants')) {\n            update_items(input, response.variants, '.prince-google-font-variants');\n          }\n\n          if (response.hasOwnProperty('subsets')) {\n            update_items(input, response.subsets, '.prince-google-font-subsets');\n          }\n        });\n      });\n      $('.js-add-google-font').on('click', function (event) {\n        var $group = $(this).parent('.format-setting-inner').find('.type-google-font-group'),\n            $el_clone = $(this).prev('.type-google-font-group-clone'),\n            $clone = $el_clone.clone(true),\n            $count = $group.length ? $group.length : 0;\n        $clone.attr('class', 'type-google-font-group');\n\n        var replacer = function (index, elm) {\n          return elm.replace('%key%', $count);\n        };\n\n        $('select', $clone).each(function () {\n          $(this).attr('id', replacer).attr('name', replacer);\n        });\n        $('.prince-google-font-variants', $clone).each(function () {\n          $(this).attr('data-field-id-prefix', replacer).attr('data-field-name', replacer);\n        });\n        $('.prince-google-font-subsets', $clone).each(function () {\n          $(this).attr('data-field-id-prefix', replacer).attr('data-field-name', replacer);\n        });\n        $el_clone.before($clone);\n        event.preventDefault();\n      });\n      $('.js-remove-google-font').on('click', function (event) {\n        $(this).parents('.type-google-font-group').remove();\n        event.preventDefault();\n      });\n    },\n    bind_colorpicker: function (field_id) {\n      $('#' + field_id).wpColorPicker({\n        change: function () {\n          PRINCE.parse_condition();\n        },\n        clear: function () {\n          PRINCE.parse_condition();\n        }\n      });\n    },\n    bind_date_picker: function (field_id, date_format) {\n      $('#' + field_id).datepicker({\n        showOtherMonths: true,\n        showButtonPanel: true,\n        currentText: prince.date_current,\n        closeText: prince.date_close,\n        dateFormat: date_format\n      });\n    },\n    bind_date_time_picker: function (field_id, date_format) {\n      $('#' + field_id).datetimepicker({\n        showOtherMonths: true,\n        closeText: prince.date_close,\n        dateFormat: date_format\n      });\n    },\n    fix_upload_parent: function () {\n      $('.prince-ui-upload-input').not('.prince-upload-attachment-id').on('focus blur', function () {\n        $(this).parent('.prince-ui-upload-parent').toggleClass('focus');\n        PRINCE.init_upload_fix(this);\n      });\n    },\n    remove_image: function (e) {\n      $(e).parent().parent().find('.prince-ui-upload-input').attr('value', '');\n      $(e).parent('.prince-ui-media-wrap').remove();\n    },\n    fix_textarea: function () {\n      $('.wp-editor-area').focus(function () {\n        $(this).parent('div').css({\n          borderColor: '#bbb'\n        });\n      }).blur(function () {\n        $(this).parent('div').css({\n          borderColor: '#ccc'\n        });\n      });\n    },\n    replicate_ajax: function () {\n      if (location.href.indexOf(\"#\") != -1) {\n        var url = $(\"input[name=\\'_wp_http_referer\\']\").val(),\n            hash = location.href.substr(location.href.indexOf(\"#\"));\n        $(\"input[name=\\'_wp_http_referer\\']\").val(url + hash);\n        this.scroll_to_top();\n      }\n\n      setTimeout(function () {\n        $(\".wrap.settings-wrap .fade\").fadeOut(\"fast\");\n      }, 3000);\n    },\n    reset_settings: function () {\n      $(document).on(\"click\", \".reset-settings\", function (event) {\n        var agree = confirm(prince.reset_agree);\n\n        if (agree) {\n          return true;\n        } else {\n          return false;\n        }\n\n        event.preventDefault();\n      });\n    },\n    css_editor_mode: function () {\n      $('.prince-css-editor').each(function () {\n        var editor = ace.edit($(this).attr('id'));\n        var this_textarea = $('#textarea_' + $(this).attr('id'));\n        editor.setTheme(\"ace/theme/chrome\");\n        editor.getSession().setMode(\"ace/mode/css\");\n        editor.setShowPrintMargin(false);\n        editor.getSession().setValue(this_textarea.val());\n        editor.getSession().on('change', function () {\n          this_textarea.val(editor.getSession().getValue());\n        });\n        this_textarea.on('change', function () {\n          editor.getSession().setValue(this_textarea.val());\n        });\n      });\n    },\n    javascript_editor_mode: function () {\n      $('.prince-javascript-editor').each(function () {\n        var editor = ace.edit($(this).attr('id'));\n        var this_textarea = $('#textarea_' + $(this).attr('id'));\n        editor.setTheme(\"ace/theme/chrome\");\n        editor.getSession().setMode(\"ace/mode/javascript\");\n        editor.setShowPrintMargin(false);\n        editor.getSession().setValue(this_textarea.val());\n        editor.getSession().on('change', function () {\n          this_textarea.val(editor.getSession().getValue());\n        });\n        this_textarea.on('change', function () {\n          editor.getSession().setValue(this_textarea.val());\n        });\n      });\n    },\n    load_editors: function () {\n      PRINCE.css_editor_mode();\n      PRINCE.javascript_editor_mode();\n    },\n    url_exists: function (url) {\n      var link = document.createElement('a');\n      link.href = url;\n\n      if (link.hostname != window.location.hostname) {\n        return true; // Stop the code from checking across domains.\n      }\n\n      var http = new XMLHttpRequest();\n      http.open('HEAD', url, false);\n      http.send();\n      return http.status != 404;\n    },\n    scroll_to_top: function () {\n      setTimeout(function () {\n        $(this).scrollTop(0);\n      }, 50);\n    }\n  };\n  $(document).ready(function () {\n    PRINCE.init();\n  });\n})(jQuery);\n/* Gallery */\n\n\n!function ($) {\n  prince_gallery = {\n    frame: function (elm) {\n      var selection = this.select(elm);\n      this._frame = wp.media({\n        id: 'prince-gallery-frame',\n        frame: 'post',\n        state: 'gallery-edit',\n        title: wp.media.view.l10n.editGalleryTitle,\n        editing: true,\n        multiple: true,\n        selection: selection\n      });\n\n      this._frame.on('update', function () {\n        var controller = prince_gallery._frame.states.get('gallery-edit'),\n            library = controller.get('library'),\n            ids = library.pluck('id'),\n            parent = $(elm).parents('.format-setting-inner'),\n            input = parent.children('.prince-gallery-value'),\n            shortcode = wp.media.gallery.shortcode(selection).string().replace(/\\\"/g, \"'\");\n\n        input.attr('value', ids);\n        if (parent.children('.prince-gallery-list').length <= 0) input.after('<ul class=\"prince-gallery-list\" />');\n        $.ajax({\n          type: 'POST',\n          url: ajaxurl,\n          dataType: 'html',\n          data: {\n            action: 'gallery_update',\n            ids: ids\n          },\n          success: function (res) {\n            parent.children('.prince-gallery-list').html(res);\n\n            if (input.hasClass('prince-gallery-shortcode')) {\n              input.val(shortcode);\n            }\n\n            if ($(elm).parent().children('.prince-gallery-delete').length <= 0) {\n              $(elm).parent().append('<a href=\"#\" class=\"prince-ui-button button button-secondary hug-left prince-gallery-delete\">' + prince.delete + '</a>');\n            }\n\n            $(elm).text(prince.edit);\n            PRINCE.parse_condition();\n          }\n        });\n      });\n\n      return this._frame;\n    },\n    select: function (elm) {\n      var input = $(elm).parents('.format-setting-inner').children('.prince-gallery-value'),\n          ids = input.attr('value'),\n          _shortcode = input.hasClass('prince-gallery-shortcode') ? ids : '[gallery ids=\\'' + ids + '\\]',\n          shortcode = wp.shortcode.next('gallery', ids ? _shortcode : wp.media.view.settings.prince_gallery.shortcode),\n          defaultPostId = wp.media.gallery.defaults.id,\n          attachments,\n          selection; // Bail if we didn't match the shortcode or all of the content.\n\n\n      if (!shortcode) return; // Ignore the rest of the match object.\n\n      shortcode = shortcode.shortcode;\n      if (_.isUndefined(shortcode.get('id')) && !_.isUndefined(defaultPostId)) shortcode.set('id', defaultPostId);\n      if (_.isUndefined(shortcode.get('ids')) && !input.hasClass('prince-gallery-shortcode') && ids) shortcode.set('ids', ids);\n      if (_.isUndefined(shortcode.get('ids'))) shortcode.set('ids', '0');\n      attachments = wp.media.gallery.attachments(shortcode);\n      selection = new wp.media.model.Selection(attachments.models, {\n        props: attachments.props.toJSON(),\n        multiple: true\n      });\n      selection.gallery = attachments.gallery; // Fetch the query's attachments, and then break ties from the query to allow for sorting.\n\n      selection.more().done(function () {\n        selection.props.set({\n          query: false\n        });\n        selection.unmirror();\n        selection.props.unset('orderby');\n      });\n      return selection;\n    },\n    open: function (elm) {\n      prince_gallery.frame(elm).open();\n    },\n    remove: function (elm) {\n      if (confirm(prince.confirm)) {\n        $(elm).parents('.format-setting-inner').children('.prince-gallery-value').attr('value', '');\n        $(elm).parents('.format-setting-inner').children('.prince-gallery-list').remove();\n        $(elm).next('.prince-gallery-edit').text(prince.create);\n        $(elm).remove();\n        PRINCE.parse_condition();\n      }\n    } // Gallery delete\n\n  };\n  $(document).on('click.prince_gallery.data-api', '.prince-gallery-delete', function (e) {\n    e.preventDefault();\n    prince_gallery.remove($(this));\n  }); // Gallery edit\n\n  $(document).on('click.prince_gallery.data-api', '.prince-gallery-edit', function (e) {\n    e.preventDefault();\n    prince_gallery.open($(this));\n  });\n}(window.jQuery);\n/*!\r\n * Adds metabox tabs\r\n */\n\n!function ($) {\n  $(document).on('ready', function () {\n    // Loop over the metaboxes\n    $('.prince-metabox-wrapper').each(function () {\n      // Only if there is a tab option\n      if ($(this).find('.type-tab').length) {\n        // Add .prince-metabox-panels\n        $(this).find('.type-tab').parents('.prince-metabox-wrapper').wrapInner('<div class=\"prince-metabox-panels\" />'); // Wrapp with .prince-metabox-tabs & add .prince-metabox-nav before .prince-metabox-panels\n\n        $(this).find('.prince-metabox-panels').wrap('<div class=\"prince-metabox-tabs\" />').before('<ul class=\"prince-metabox-nav\" />'); // Loop over settings and build the tabs nav\n\n        $(this).find('.format-settings').each(function () {\n          if ($(this).find('.type-tab').length > 0) {\n            var title = $(this).find('.type-tab').prev().find('label').text(),\n                id = $(this).attr('id'); // Add a class, hide & append nav item\n\n            $(this).addClass('is-panel').hide();\n            $(this).parents('.prince-metabox-panels').prev('.prince-metabox-nav').append('<li><a href=\"#' + id + '\">' + title + '</a></li>');\n          }\n        }); // Loop over the panels and wrap and ID them.\n\n        $(this).find('.is-panel').each(function () {\n          var id = $(this).attr('id');\n          $(this).add($(this).nextUntil('.is-panel')).wrapAll('<div id=\"' + id + '\" class=\"tab-content\" />');\n        }); // Create the tabs\n\n        $(this).find('.prince-metabox-tabs').tabs({\n          activate: function (event, ui) {\n            var parent = $(this).outerHeight(),\n                child = $(this).find('.prince-metabox-panels').outerHeight() + 8,\n                minHeight = parent - 34;\n\n            if ($(this).find('.prince-metabox-panels').css('padding') == '12px' && child < parent) {\n              $(this).find('.prince-metabox-panels').css({\n                minHeight: minHeight\n              });\n            }\n\n            PRINCE.load_editors();\n          }\n        }); // Move the orphaned settings to the top\n\n        $(this).find('.prince-metabox-panels > .format-settings').prependTo($(this)); // Remove a bunch of classes to stop style conflicts.\n\n        $(this).find('.prince-metabox-tabs').removeClass('ui-widget ui-widget-content ui-corner-all');\n        $(this).find('.prince-metabox-nav').removeClass('ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all');\n        $(this).find('.prince-metabox-nav li').removeClass('ui-state-default ui-corner-top ui-tabs-active ui-tabs-active');\n        $(this).find('.prince-metabox-nav li').on('mouseenter mouseleave', function () {\n          $(this).removeClass('ui-state-hover');\n        });\n      }\n    });\n  });\n}(window.jQuery);\n/*!\r\n * Adds theme option tabs\r\n */\n\n!function ($) {\n  $(document).on('ready', function () {\n    // Loop over the Settings\n    $('#prince-settings-api .inside').each(function () {\n      // Only if there is a tab option\n      if ($(this).find('.type-tab').length) {\n        // Add .prince-settings-panels\n        $(this).find('.type-tab').parents('.inside').wrapInner('<div class=\"prince-settings-panels\" />'); // Wrap with .prince-settings-tabs & add .prince-settings-nav before .prince-settings-panels\n\n        $(this).find('.prince-settings-panels').wrap('<div class=\"prince-settings-tabs\" />').before('<ul class=\"prince-settings-nav\" />'); // Loop over settings and build the tabs nav\n\n        $(this).find('.format-settings').each(function () {\n          if ($(this).find('.type-tab').length > 0) {\n            var title = $(this).find('.type-tab').prev().find('.label').text(),\n                id = $(this).attr('id'); // Add a class, hide & append nav item\n\n            $(this).addClass('is-panel').hide();\n            $(this).parents('.prince-settings-panels').prev('.prince-settings-nav').append('<li><a href=\"#' + id + '\">' + title + '</a></li>');\n          } else {}\n        }); // Loop over the panels and wrap and ID them.\n\n        $(this).find('.is-panel').each(function () {\n          var id = $(this).attr('id');\n          $(this).add($(this).nextUntil('.is-panel')).wrapAll('<div id=\"' + id + '\" class=\"tab-content\" />');\n        }); // Create the tabs\n\n        $(this).find('.prince-settings-tabs').tabs({\n          activate: function (event, ui) {\n            PRINCE.load_editors();\n          }\n        }); // Move the orphaned settings to the top\n\n        $(this).find('.prince-settings-panels > .format-settings').prependTo($(this).find('.prince-settings-tabs'));\n      }\n    });\n  });\n}(window.jQuery);\n/*!\r\n * Fixes the state of metabox radio buttons after a Drag & Drop event.\r\n */\n\n!function ($) {\n  $(document).on('ready', function () {\n    // detect mousedown and store all checked radio buttons\n    $('.hndle').on('mousedown', function () {\n      // get parent element of .hndle selected.\n      // We only need to monitor radios insde the object that is being moved.\n      var parent_id = $(this).closest('div').attr('id'); // set live event listener for mouse up on the content .wrap\n      // then give the dragged div time to settle before firing the reclick function\n\n      $('.wrap').on('mouseup', function () {\n        var prince_checked_radios = {}; // loop over all checked radio buttons inside of parent element\n\n        $('#' + parent_id + ' input[type=\"radio\"]').each(function () {\n          // stores checked radio buttons\n          if ($(this).is(':checked')) {\n            prince_checked_radios[$(this).attr('name')] = $(this).val();\n          } // write to the object\n\n\n          $(document).data('prince_checked_radios', prince_checked_radios);\n        }); // restore all checked radio buttons\n\n        setTimeout(function () {\n          // get object of checked radio button names and values\n          var checked = $(document).data('prince_checked_radios'); // step thru each object element and trigger a click on it's corresponding radio button\n\n          for (key in checked) {\n            $('input[name=\"' + key + '\"]').filter('[value=\"' + checked[key] + '\"]').trigger('click');\n          }\n\n          $('.wrap').unbind('mouseup');\n        }, 50);\n      });\n    });\n  });\n}(window.jQuery);\n/*!\r\n * Adds opacity to the default colorpicker\r\n *\r\n * Derivative work of the Codestar WP Color Picker.\r\n */\n\n(function ($, window, document, undefined) {\n  'use strict'; // adding alpha support for Automattic Color.js toString function.\n\n  if (typeof Color.fn.toString !== undefined) {\n    Color.fn.toString = function () {\n      // check for alpha\n      if (this._alpha < 1) {\n        return this.toCSS('rgba', this._alpha).replace(/\\s+/g, '');\n      }\n\n      var hex = parseInt(this._color, 10).toString(16);\n\n      if (this.error) {\n        return '';\n      } // maybe left pad it\n\n\n      if (hex.length < 6) {\n        for (var i = 6 - hex.length - 1; i >= 0; i--) {\n          hex = '0' + hex;\n        }\n      }\n\n      return '#' + hex;\n    };\n  }\n\n  $.prince_ParseColorValue = function (val) {\n    var value = val.replace(/\\s+/g, ''),\n        alpha = value.indexOf('rgba') !== -1 ? parseFloat(value.replace(/^.*,(.+)\\)/, '$1') * 100) : 100,\n        rgba = alpha < 100;\n    return {\n      value: value,\n      alpha: alpha,\n      rgba: rgba\n    };\n  };\n\n  $.fn.prince_wpColorPicker = function () {\n    return this.each(function () {\n      var $this = $(this); // check for rgba enabled/disable\n\n      if ($this.data('rgba') !== false) {\n        // parse value\n        var picker = $.prince_ParseColorValue($this.val()); // wpColorPicker core\n\n        $this.wpColorPicker({\n          // wpColorPicker: change\n          change: function (event, ui) {\n            // update checkerboard background color\n            $this.closest('.wp-picker-container').find('.prince-opacity-slider-offset').css('background-color', ui.color.toString());\n            $this.trigger('keyup');\n          },\n          // wpColorPicker: create\n          create: function (event, ui) {\n            // set variables for alpha slider\n            var a8cIris = $this.data('a8cIris'),\n                $container = $this.closest('.wp-picker-container'),\n                // appending alpha wrapper\n            $alpha_wrap = $('<div class=\"prince-opacity-wrap\">' + '<div class=\"prince-opacity-slider\"></div>' + '<div class=\"prince-opacity-slider-offset\"></div>' + '<div class=\"prince-opacity-text\"></div>' + '</div>').appendTo($container.find('.wp-picker-holder')),\n                $alpha_slider = $alpha_wrap.find('.prince-opacity-slider'),\n                $alpha_text = $alpha_wrap.find('.prince-opacity-text'),\n                $alpha_offset = $alpha_wrap.find('.prince-opacity-slider-offset'); // alpha slider\n\n            $alpha_slider.slider({\n              // slider: slide\n              slide: function (event, ui) {\n                var slide_value = parseFloat(ui.value / 100); // update iris data alpha && wpColorPicker color option && alpha text\n\n                a8cIris._color._alpha = slide_value;\n                $this.wpColorPicker('color', a8cIris._color.toString());\n                $alpha_text.text(slide_value < 1 ? slide_value : '');\n              },\n              // slider: create\n              create: function () {\n                var slide_value = parseFloat(picker.alpha / 100),\n                    alpha_text_value = slide_value < 1 ? slide_value : ''; // update alpha text && checkerboard background color\n\n                $alpha_text.text(alpha_text_value);\n                $alpha_offset.css('background-color', picker.value); // wpColorPicker clear button for update iris data alpha && alpha text && slider color option\n\n                $container.on('click', '.wp-picker-clear', function () {\n                  a8cIris._color._alpha = 1;\n                  $alpha_text.text('');\n                  $alpha_slider.slider('option', 'value', 100).trigger('slide');\n                }); // wpColorPicker default button for update iris data alpha && alpha text && slider color option\n\n                $container.on('click', '.wp-picker-default', function () {\n                  var default_picker = $.prince_ParseColorValue($this.data('default-color')),\n                      default_value = parseFloat(default_picker.alpha / 100),\n                      default_text = default_value < 1 ? default_value : '';\n                  a8cIris._color._alpha = default_value;\n                  $alpha_text.text(default_text);\n                  $alpha_slider.slider('option', 'value', default_picker.alpha).trigger('slide');\n                }); // show alpha wrapper on click color picker button\n\n                $container.on('click', '.wp-color-result', function () {\n                  $alpha_wrap.toggle();\n                }); // hide alpha wrapper on click body\n\n                $('body').on('click.wpcolorpicker', function () {\n                  $alpha_wrap.hide();\n                });\n              },\n              // slider: options\n              value: picker.alpha,\n              step: 1,\n              min: 1,\n              max: 100\n            });\n          }\n        });\n      } else {\n        // wpColorPicker default picker\n        $this.wpColorPicker({\n          change: function () {\n            $this.trigger('keyup');\n          }\n        });\n      }\n    });\n  };\n\n  $(document).ready(function () {\n    $('.hide-color-picker.prince-colorpicker-opacity').prince_wpColorPicker();\n  });\n})(jQuery, window, document);\n\n//# sourceURL=webpack:///./src/js/prince-admin.js?");

/***/ }),

/***/ "./src/prince.js":
/*!***********************!*\
  !*** ./src/prince.js ***!
  \***********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _images_Prince_Crown_Logo_White_50x44_png__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./images/Prince-Crown-Logo-White-50x44.png */ \"./src/images/Prince-Crown-Logo-White-50x44.png\");\n/* harmony import */ var _images_Prince_Crown_Logo_White_50x44_png__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_images_Prince_Crown_Logo_White_50x44_png__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _js_jquery_ui_timepicker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/jquery-ui-timepicker */ \"./src/js/jquery-ui-timepicker.js\");\n/* harmony import */ var _js_jquery_ui_timepicker__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_js_jquery_ui_timepicker__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _js_prince_admin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/prince-admin */ \"./src/js/prince-admin.js\");\n/* harmony import */ var _js_prince_admin__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_js_prince_admin__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _js_extra__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/extra */ \"./src/js/extra.js\");\n/* harmony import */ var _js_extra__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_js_extra__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _css_prince_admin_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./css/prince-admin.scss */ \"./src/css/prince-admin.scss\");\n/* harmony import */ var _css_prince_admin_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_css_prince_admin_scss__WEBPACK_IMPORTED_MODULE_4__);\nfunction importAll(r) {\n  r.keys().forEach(r);\n}\n\nimportAll(__webpack_require__(\"./src/images/layout sync recursive \\\\.png$\"));\n\n\n\n\n\n\n//# sourceURL=webpack:///./src/prince.js?");

/***/ })

/******/ });